<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.1130.2000                               -->
<workbook source-build='10.1.13 (10100.17.1130.2000)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='plotTopQuoteesDF_p' inline='true' name='federated.1474e3m0c69jby151lvup13tqyeq' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='plotTopQuoteesDF_p' name='textscan.0g38v0711pw38w1g1iz2q1r4101b'>
            <connection class='textscan' directory='/Users/smeros/workspace/nutritionStudy/Demo/sources' filename='plotTopQuoteesDF_p.tsv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0g38v0711pw38w1g1iz2q1r4101b' name='plotTopQuoteesDF_p.tsv' table='[plotTopQuoteesDF_p#tsv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='quotee' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[plotTopQuoteesDF_p.tsv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quotee</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quotee]</local-name>
            <parent-name>[plotTopQuoteesDF_p.tsv]</parent-name>
            <remote-alias>quotee</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[plotTopQuoteesDF_p.tsv]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[plotTopQuoteesDF_p.tsv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Quotee' datatype='string' name='[quotee]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.470833' measure-ordering='alphabetic' measure-percentage='0.529167' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='plotHeatMapDF' inline='true' name='federated.08rkxn81vkcbm51c075q30yr41nk' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='plotHeatMapDF' name='textscan.0u8v7151ev83hj1go63fj1qqttz1'>
            <connection class='textscan' directory='/Users/smeros/workspace/nutritionStudy/Demo/sources' filename='plotHeatMapDF.tsv' password='' server='' />
          </named-connection>
          <named-connection caption='plotTopQuoteesDF_o' name='textscan.0dffs6p0aw2g6h150gmrm13q9mah'>
            <connection class='textscan' directory='/Users/smeros/workspace/nutritionStudy/Demo/sources' filename='plotHeatMapDF.tsv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0u8v7151ev83hj1go63fj1qqttz1' name='plotHeatMapDF.tsv' table='[plotHeatMapDF#tsv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='string' name='articleTopic' ordinal='0' />
            <column datatype='real' name='antibiotics' ordinal='1' />
            <column datatype='real' name='beans' ordinal='2' />
            <column datatype='real' name='cheese' ordinal='3' />
            <column datatype='real' name='chicken' ordinal='4' />
            <column datatype='real' name='children' ordinal='5' />
            <column datatype='real' name='chocolate' ordinal='6' />
            <column datatype='real' name='cholesterol' ordinal='7' />
            <column datatype='real' name='coffee' ordinal='8' />
            <column datatype='real' name='cookies' ordinal='9' />
            <column datatype='real' name='dairy' ordinal='10' />
            <column datatype='real' name='dates' ordinal='11' />
            <column datatype='real' name='energy' ordinal='12' />
            <column datatype='real' name='environment' ordinal='13' />
            <column datatype='real' name='fat' ordinal='14' />
            <column datatype='real' name='fish' ordinal='15' />
            <column datatype='real' name='fruit' ordinal='16' />
            <column datatype='real' name='gluten' ordinal='17' />
            <column datatype='real' name='insulin' ordinal='18' />
            <column datatype='real' name='lead' ordinal='19' />
            <column datatype='real' name='meat' ordinal='20' />
            <column datatype='real' name='milk' ordinal='21' />
            <column datatype='real' name='obesity' ordinal='22' />
            <column datatype='real' name='oils' ordinal='23' />
            <column datatype='real' name='pizza' ordinal='24' />
            <column datatype='real' name='recipes' ordinal='25' />
            <column datatype='real' name='restaurants' ordinal='26' />
            <column datatype='real' name='rice' ordinal='27' />
            <column datatype='real' name='salt' ordinal='28' />
            <column datatype='real' name='stress' ordinal='29' />
            <column datatype='real' name='sugar' ordinal='30' />
            <column datatype='real' name='tea' ordinal='31' />
            <column datatype='real' name='water' ordinal='32' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>articleTopic</remote-name>
            <remote-type>129</remote-type>
            <local-name>[articleTopic]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>articleTopic</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>antibiotics</remote-name>
            <remote-type>5</remote-type>
            <local-name>[antibiotics]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>antibiotics</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>beans</remote-name>
            <remote-type>5</remote-type>
            <local-name>[beans]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>beans</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cheese</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cheese]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>cheese</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>chicken</remote-name>
            <remote-type>5</remote-type>
            <local-name>[chicken]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>chicken</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>children</remote-name>
            <remote-type>5</remote-type>
            <local-name>[children]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>children</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>chocolate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[chocolate]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>chocolate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cholesterol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cholesterol]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>cholesterol</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coffee</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coffee]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>coffee</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cookies</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cookies]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>cookies</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dairy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dairy]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>dairy</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dates</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dates]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>dates</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>energy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[energy]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>energy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>environment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[environment]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>environment</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fat]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>fat</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fish</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fish]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>fish</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fruit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fruit]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>fruit</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gluten</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gluten]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>gluten</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>insulin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[insulin]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>insulin</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lead</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lead]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>lead</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>meat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[meat]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>meat</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>milk</remote-name>
            <remote-type>5</remote-type>
            <local-name>[milk]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>milk</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>obesity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[obesity]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>obesity</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oils</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oils]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>oils</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pizza</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pizza]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>pizza</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recipes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[recipes]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>recipes</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restaurants</remote-name>
            <remote-type>5</remote-type>
            <local-name>[restaurants]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>restaurants</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rice]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>rice</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[salt]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>salt</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stress</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stress]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>stress</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sugar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sugar]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>sugar</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tea</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tea]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>tea</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>water</remote-name>
            <remote-type>5</remote-type>
            <local-name>[water]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>water</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Antibiotics' datatype='real' name='[antibiotics]' role='measure' type='quantitative' />
      <column caption='Article Topic' datatype='string' name='[articleTopic]' role='dimension' type='nominal' />
      <column caption='Beans' datatype='real' name='[beans]' role='measure' type='quantitative' />
      <column caption='Cheese' datatype='real' name='[cheese]' role='measure' type='quantitative' />
      <column caption='Chicken' datatype='real' name='[chicken]' role='measure' type='quantitative' />
      <column caption='Children' datatype='real' name='[children]' role='measure' type='quantitative' />
      <column caption='Chocolate' datatype='real' name='[chocolate]' role='measure' type='quantitative' />
      <column caption='Cholesterol' datatype='real' name='[cholesterol]' role='measure' type='quantitative' />
      <column caption='Coffee' datatype='real' name='[coffee]' role='measure' type='quantitative' />
      <column caption='Cookies' datatype='real' name='[cookies]' role='measure' type='quantitative' />
      <column caption='Dairy' datatype='real' name='[dairy]' role='measure' type='quantitative' />
      <column caption='Dates' datatype='real' name='[dates]' role='measure' type='quantitative' />
      <column caption='Energy' datatype='real' name='[energy]' role='measure' type='quantitative' />
      <column caption='Environment' datatype='real' name='[environment]' role='measure' type='quantitative' />
      <column caption='Fat' datatype='real' name='[fat]' role='measure' type='quantitative' />
      <column caption='Fish' datatype='real' name='[fish]' role='measure' type='quantitative' />
      <column caption='Fruit' datatype='real' name='[fruit]' role='measure' type='quantitative' />
      <column caption='Gluten' datatype='real' name='[gluten]' role='measure' type='quantitative' />
      <column caption='Insulin' datatype='real' name='[insulin]' role='measure' type='quantitative' />
      <column caption='Lead' datatype='real' name='[lead]' role='measure' type='quantitative' />
      <column caption='Meat' datatype='real' name='[meat]' role='measure' type='quantitative' />
      <column caption='Milk' datatype='real' name='[milk]' role='measure' type='quantitative' />
      <column caption='Obesity' datatype='real' name='[obesity]' role='measure' type='quantitative' />
      <column caption='Oils' datatype='real' name='[oils]' role='measure' type='quantitative' />
      <column caption='Pizza' datatype='real' name='[pizza]' role='measure' type='quantitative' />
      <column caption='Recipes' datatype='real' name='[recipes]' role='measure' type='quantitative' />
      <column caption='Restaurants' datatype='real' name='[restaurants]' role='measure' type='quantitative' />
      <column caption='Rice' datatype='real' name='[rice]' role='measure' type='quantitative' />
      <column caption='Salt' datatype='real' name='[salt]' role='measure' type='quantitative' />
      <column caption='Stress' datatype='real' name='[stress]' role='measure' type='quantitative' />
      <column caption='Sugar' datatype='real' name='[sugar]' role='measure' type='quantitative' />
      <column caption='Tea' datatype='real' name='[tea]' role='measure' type='quantitative' />
      <column caption='Water' datatype='real' name='[water]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.0583333' measure-ordering='alphabetic' measure-percentage='0.941667' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='articleTopic' />
        <field-sort-custom-order field='antibiotics' />
        <field-sort-custom-order field='beans' />
        <field-sort-custom-order field='cheese' />
        <field-sort-custom-order field='chicken' />
        <field-sort-custom-order field='children' />
        <field-sort-custom-order field='chocolate' />
        <field-sort-custom-order field='cholesterol' />
        <field-sort-custom-order field='coffee' />
        <field-sort-custom-order field='cookies' />
        <field-sort-custom-order field='dairy' />
        <field-sort-custom-order field='dates' />
        <field-sort-custom-order field='energy' />
        <field-sort-custom-order field='environment' />
        <field-sort-custom-order field='fat' />
        <field-sort-custom-order field='fish' />
        <field-sort-custom-order field='fruit' />
        <field-sort-custom-order field='gluten' />
        <field-sort-custom-order field='insulin' />
        <field-sort-custom-order field='lead' />
        <field-sort-custom-order field='meat' />
        <field-sort-custom-order field='milk' />
        <field-sort-custom-order field='obesity' />
        <field-sort-custom-order field='oils' />
        <field-sort-custom-order field='pizza' />
        <field-sort-custom-order field='recipes' />
        <field-sort-custom-order field='restaurants' />
        <field-sort-custom-order field='rice' />
        <field-sort-custom-order field='salt' />
        <field-sort-custom-order field='stress' />
        <field-sort-custom-order field='sugar' />
        <field-sort-custom-order field='tea' />
        <field-sort-custom-order field='water' />
      </field-sort-info>
    </datasource>
    <datasource caption='plotNumOfQuotesDF' inline='true' name='federated.01t4x0m16q73la12mooj805oeaj4' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='plotNumOfQuotesDF' name='textscan.1lvllm805vhmz211890wz1jmxknz'>
            <connection class='textscan' directory='/Users/smeros/workspace/nutritionStudy/Demo/sources' filename='plotNumOfQuotesDF.tsv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1lvllm805vhmz211890wz1jmxknz' name='plotNumOfQuotesDF.tsv' table='[plotNumOfQuotesDF#tsv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='string' name='articleTopic' ordinal='0' />
            <column datatype='real' name='persons' ordinal='1' />
            <column datatype='real' name='organizations' ordinal='2' />
            <column datatype='real' name='authority' ordinal='3' />
            <column datatype='real' name='empirical observation' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>articleTopic</remote-name>
            <remote-type>129</remote-type>
            <local-name>[articleTopic]</local-name>
            <parent-name>[plotNumOfQuotesDF.tsv]</parent-name>
            <remote-alias>articleTopic</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[persons]</local-name>
            <parent-name>[plotNumOfQuotesDF.tsv]</parent-name>
            <remote-alias>persons</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>organizations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[organizations]</local-name>
            <parent-name>[plotNumOfQuotesDF.tsv]</parent-name>
            <remote-alias>organizations</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>authority</remote-name>
            <remote-type>5</remote-type>
            <local-name>[authority]</local-name>
            <parent-name>[plotNumOfQuotesDF.tsv]</parent-name>
            <remote-alias>authority</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>empirical observation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[empirical observation]</local-name>
            <parent-name>[plotNumOfQuotesDF.tsv]</parent-name>
            <remote-alias>empirical observation</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[plotNumOfQuotesDF.tsv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Article Topic' datatype='string' name='[articleTopic]' role='dimension' type='nominal' />
      <column caption='Authority' datatype='real' name='[authority]' role='measure' type='quantitative' />
      <column caption='Empirical Observation' datatype='real' name='[empirical observation]' role='measure' type='quantitative' />
      <column caption='Organizations' datatype='real' name='[organizations]' role='measure' type='quantitative' />
      <column caption='Persons' datatype='real' name='[persons]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.439199' measure-ordering='alphabetic' measure-percentage='0.560801' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='plotTopQuoteesDF_o' inline='true' name='federated.0blxon918wuvlt13amf8d1xt9ka5' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='plotTopQuoteesDF_o' name='textscan.10n7obt11ly97j11qyeq80rbziux'>
            <connection class='textscan' directory='/Users/smeros/workspace/nutritionStudy/Demo/sources' filename='plotTopQuoteesDF_o.tsv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.10n7obt11ly97j11qyeq80rbziux' name='plotTopQuoteesDF_o.tsv' table='[plotTopQuoteesDF_o#tsv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='organization' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[plotTopQuoteesDF_o.tsv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>organization</remote-name>
            <remote-type>129</remote-type>
            <local-name>[organization]</local-name>
            <parent-name>[plotTopQuoteesDF_o.tsv]</parent-name>
            <remote-alias>organization</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[plotTopQuoteesDF_o.tsv]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[plotTopQuoteesDF_o.tsv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Organization' datatype='string' name='[organization]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;ÊAmazon Fresh&quot;' value='Amazon Fresh' />
        </aliases>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.448687' measure-ordering='alphabetic' measure-percentage='0.551313' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='plotQuotesAndTopicsDF' inline='true' name='federated.0in6t7u08uo9vn15vfcue18vmizb' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='plotQuotesAndTopicsDF' name='textscan.1o2y4mq1u2ko9i1ej1skp0tx17n5'>
            <connection class='textscan' directory='/Users/smeros/Desktop' filename='plotQuotesAndTopicsDF.tsv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1o2y4mq1u2ko9i1ej1skp0tx17n5' name='plotQuotesAndTopicsDF.tsv' table='[plotQuotesAndTopicsDF#tsv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='quote' ordinal='1' />
            <column datatype='string' name='quotee' ordinal='2' />
            <column datatype='string' name='quoteeAffiliation' ordinal='3' />
            <column datatype='string' name='quoteeType' ordinal='4' />
            <column datatype='string' name='articleTopic' ordinal='5' />
            <column datatype='real' name='articleSim' ordinal='6' />
            <column datatype='string' name='quoteTopic' ordinal='7' />
            <column datatype='real' name='quoteSim' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quote</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quote]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>quote</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quotee</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quotee]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>quotee</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quoteeAffiliation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quoteeAffiliation]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>quoteeAffiliation</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quoteeType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quoteeType]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>quoteeType</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>articleTopic</remote-name>
            <remote-type>129</remote-type>
            <local-name>[articleTopic]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>articleTopic</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>articleSim</remote-name>
            <remote-type>5</remote-type>
            <local-name>[articleSim]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>articleSim</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quoteTopic</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quoteTopic]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>quoteTopic</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quoteSim</remote-name>
            <remote-type>5</remote-type>
            <local-name>[quoteSim]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>quoteSim</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;ibm-5348_P100-1997&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Article Sim' datatype='real' name='[articleSim]' role='measure' type='quantitative' />
      <column caption='Article Topic' datatype='string' name='[articleTopic]' role='dimension' type='nominal' />
      <column caption='Quote Sim' datatype='real' name='[quoteSim]' role='measure' type='quantitative' />
      <column caption='Quote Topic' datatype='string' name='[quoteTopic]' role='dimension' type='nominal' />
      <column caption='Quote' datatype='string' name='[quote]' role='dimension' type='nominal' />
      <column caption='Quotee Affiliation' datatype='string' name='[quoteeAffiliation]' role='dimension' type='nominal' />
      <column caption='Quotee Type' datatype='string' name='[quoteeType]' role='dimension' type='nominal' />
      <column caption='Quotee' datatype='string' name='[quotee]' role='dimension' type='nominal' />
      <column-instance column='[articleTopic]' derivation='None' name='[none:articleTopic:nk]' pivot='key' type='nominal' />
      <column-instance column='[quoteTopic]' derivation='None' name='[none:quoteTopic:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.551313' measure-ordering='alphabetic' measure-percentage='0.448687' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:articleTopic:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;cookies&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;stress&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;antibiotics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;milk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;children&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;recipes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;environment&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dairy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sugar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;chocolate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;restaurants&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;lead&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;beans&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;obesity&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;gluten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;cholesterol&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rice&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;fat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;fish&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;insulin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;meat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;dates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;tea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;coffee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;salt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;cheese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;oils&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;fruit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;energy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;water&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;chicken&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pizza&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:quoteTopic:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;cookies&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;stress&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;antibiotics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;milk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;children&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;recipes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;environment&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dairy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sugar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;chocolate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;restaurants&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;lead&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;beans&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;obesity&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;gluten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;cholesterol&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rice&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;fat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;fish&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;insulin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;meat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;dates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;tea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;coffee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;salt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;cheese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;oils&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;fruit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;energy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;water&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;chicken&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pizza&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Bubbles'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Quotes per Topic</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='plotQuotesAndTopicsDF' name='federated.0in6t7u08uo9vn15vfcue18vmizb' />
          </datasources>
          <datasource-dependencies datasource='federated.0in6t7u08uo9vn15vfcue18vmizb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Article Sim' datatype='real' name='[articleSim]' role='measure' type='quantitative' />
            <column-instance column='[articleSim]' derivation='Attribute' name='[attr:articleSim:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quoteSim]' derivation='Attribute' name='[attr:quoteSim:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quote]' derivation='None' name='[none:quote:nk]' pivot='key' type='nominal' />
            <column-instance column='[quoteTopic]' derivation='None' name='[none:quoteTopic:nk]' pivot='key' type='nominal' />
            <column caption='Quote Sim' datatype='real' name='[quoteSim]' role='measure' type='quantitative' />
            <column caption='Quote Topic' datatype='string' name='[quoteTopic]' role='dimension' type='nominal' />
            <column caption='Quote' datatype='string' name='[quote]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0in6t7u08uo9vn15vfcue18vmizb].[attr:articleSim:qk]' included-values='in-range'>
            <min>0.90000000000000002</min>
            <max>0.96274038500000003</max>
          </filter>
          <filter class='quantitative' column='[federated.0in6t7u08uo9vn15vfcue18vmizb].[attr:quoteSim:qk]' included-values='in-range'>
            <min>0.75</min>
            <max>0.93541666700000003</max>
          </filter>
          <slices>
            <column>[federated.0in6t7u08uo9vn15vfcue18vmizb].[attr:articleSim:qk]</column>
            <column>[federated.0in6t7u08uo9vn15vfcue18vmizb].[attr:quoteSim:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0in6t7u08uo9vn15vfcue18vmizb].[sum:Number of Records:qk]' />
              <color column='[federated.0in6t7u08uo9vn15vfcue18vmizb].[none:quoteTopic:nk]' />
              <text column='[federated.0in6t7u08uo9vn15vfcue18vmizb].[none:quote:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='HeatMap'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Topics of Articles vs Topics of Quotes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='plotHeatMapDF' name='federated.08rkxn81vkcbm51c075q30yr41nk' />
          </datasources>
          <datasource-dependencies datasource='federated.08rkxn81vkcbm51c075q30yr41nk'>
            <column caption='Antibiotics' datatype='real' name='[antibiotics]' role='measure' type='quantitative' />
            <column caption='Article Topic' datatype='string' name='[articleTopic]' role='dimension' type='nominal' />
            <column-instance column='[antibiotics]' derivation='Attribute' name='[attr:antibiotics:qk]' pivot='key' type='quantitative' />
            <column-instance column='[beans]' derivation='Attribute' name='[attr:beans:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cheese]' derivation='Attribute' name='[attr:cheese:qk]' pivot='key' type='quantitative' />
            <column-instance column='[chicken]' derivation='Attribute' name='[attr:chicken:qk]' pivot='key' type='quantitative' />
            <column-instance column='[children]' derivation='Attribute' name='[attr:children:qk]' pivot='key' type='quantitative' />
            <column-instance column='[chocolate]' derivation='Attribute' name='[attr:chocolate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cholesterol]' derivation='Attribute' name='[attr:cholesterol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coffee]' derivation='Attribute' name='[attr:coffee:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cookies]' derivation='Attribute' name='[attr:cookies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dairy]' derivation='Attribute' name='[attr:dairy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dates]' derivation='Attribute' name='[attr:dates:qk]' pivot='key' type='quantitative' />
            <column-instance column='[energy]' derivation='Attribute' name='[attr:energy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[environment]' derivation='Attribute' name='[attr:environment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fat]' derivation='Attribute' name='[attr:fat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fish]' derivation='Attribute' name='[attr:fish:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fruit]' derivation='Attribute' name='[attr:fruit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gluten]' derivation='Attribute' name='[attr:gluten:qk]' pivot='key' type='quantitative' />
            <column-instance column='[insulin]' derivation='Attribute' name='[attr:insulin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lead]' derivation='Attribute' name='[attr:lead:qk]' pivot='key' type='quantitative' />
            <column-instance column='[meat]' derivation='Attribute' name='[attr:meat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[milk]' derivation='Attribute' name='[attr:milk:qk]' pivot='key' type='quantitative' />
            <column-instance column='[obesity]' derivation='Attribute' name='[attr:obesity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oils]' derivation='Attribute' name='[attr:oils:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pizza]' derivation='Attribute' name='[attr:pizza:qk]' pivot='key' type='quantitative' />
            <column-instance column='[recipes]' derivation='Attribute' name='[attr:recipes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[restaurants]' derivation='Attribute' name='[attr:restaurants:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rice]' derivation='Attribute' name='[attr:rice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[salt]' derivation='Attribute' name='[attr:salt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[stress]' derivation='Attribute' name='[attr:stress:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sugar]' derivation='Attribute' name='[attr:sugar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tea]' derivation='Attribute' name='[attr:tea:qk]' pivot='key' type='quantitative' />
            <column-instance column='[water]' derivation='Attribute' name='[attr:water:qk]' pivot='key' type='quantitative' />
            <column caption='Beans' datatype='real' name='[beans]' role='measure' type='quantitative' />
            <column caption='Cheese' datatype='real' name='[cheese]' role='measure' type='quantitative' />
            <column caption='Chicken' datatype='real' name='[chicken]' role='measure' type='quantitative' />
            <column caption='Children' datatype='real' name='[children]' role='measure' type='quantitative' />
            <column caption='Chocolate' datatype='real' name='[chocolate]' role='measure' type='quantitative' />
            <column caption='Cholesterol' datatype='real' name='[cholesterol]' role='measure' type='quantitative' />
            <column caption='Coffee' datatype='real' name='[coffee]' role='measure' type='quantitative' />
            <column caption='Cookies' datatype='real' name='[cookies]' role='measure' type='quantitative' />
            <column caption='Dairy' datatype='real' name='[dairy]' role='measure' type='quantitative' />
            <column caption='Dates' datatype='real' name='[dates]' role='measure' type='quantitative' />
            <column caption='Energy' datatype='real' name='[energy]' role='measure' type='quantitative' />
            <column caption='Environment' datatype='real' name='[environment]' role='measure' type='quantitative' />
            <column caption='Fat' datatype='real' name='[fat]' role='measure' type='quantitative' />
            <column caption='Fish' datatype='real' name='[fish]' role='measure' type='quantitative' />
            <column caption='Fruit' datatype='real' name='[fruit]' role='measure' type='quantitative' />
            <column caption='Gluten' datatype='real' name='[gluten]' role='measure' type='quantitative' />
            <column caption='Insulin' datatype='real' name='[insulin]' role='measure' type='quantitative' />
            <column caption='Lead' datatype='real' name='[lead]' role='measure' type='quantitative' />
            <column caption='Meat' datatype='real' name='[meat]' role='measure' type='quantitative' />
            <column caption='Milk' datatype='real' name='[milk]' role='measure' type='quantitative' />
            <column-instance column='[articleTopic]' derivation='None' name='[none:articleTopic:nk]' pivot='key' type='nominal' />
            <column caption='Obesity' datatype='real' name='[obesity]' role='measure' type='quantitative' />
            <column caption='Oils' datatype='real' name='[oils]' role='measure' type='quantitative' />
            <column caption='Pizza' datatype='real' name='[pizza]' role='measure' type='quantitative' />
            <column caption='Recipes' datatype='real' name='[recipes]' role='measure' type='quantitative' />
            <column caption='Restaurants' datatype='real' name='[restaurants]' role='measure' type='quantitative' />
            <column caption='Rice' datatype='real' name='[rice]' role='measure' type='quantitative' />
            <column caption='Salt' datatype='real' name='[salt]' role='measure' type='quantitative' />
            <column caption='Stress' datatype='real' name='[stress]' role='measure' type='quantitative' />
            <column caption='Sugar' datatype='real' name='[sugar]' role='measure' type='quantitative' />
            <column caption='Tea' datatype='real' name='[tea]' role='measure' type='quantitative' />
            <column caption='Water' datatype='real' name='[water]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08rkxn81vkcbm51c075q30yr41nk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:antibiotics:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:beans:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:cheese:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:chicken:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:children:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:chocolate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:cholesterol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:coffee:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:cookies:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:dairy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:dates:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:energy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:environment:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:fat:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:fish:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:fruit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:gluten:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:insulin:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:lead:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:meat:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:milk:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:obesity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:oils:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:pizza:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:recipes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:restaurants:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:rice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:salt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:stress:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:sugar:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:tea:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:water:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08rkxn81vkcbm51c075q30yr41nk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnlabel' value='horizontal' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.08rkxn81vkcbm51c075q30yr41nk].[Multiple Values]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.08rkxn81vkcbm51c075q30yr41nk].[:Measure Names]' value='-90' />
            <format attr='text-format' field='[federated.08rkxn81vkcbm51c075q30yr41nk].[Multiple Values]' value='p0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.08rkxn81vkcbm51c075q30yr41nk].[Multiple Values]' max='0.59999999999999998' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.08rkxn81vkcbm51c075q30yr41nk].[Multiple Values]' value='% of Quote Topic'>
              <formatted-text>
                <run>% of Quote Topic</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08rkxn81vkcbm51c075q30yr41nk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08rkxn81vkcbm51c075q30yr41nk].[none:articleTopic:nk]</rows>
        <cols>[federated.08rkxn81vkcbm51c075q30yr41nk].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='QuoteTypes'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>What kinds of quotes are used in articles of different topics?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='plotNumOfQuotesDF' name='federated.01t4x0m16q73la12mooj805oeaj4' />
          </datasources>
          <datasource-dependencies datasource='federated.01t4x0m16q73la12mooj805oeaj4'>
            <column caption='Article Topic' datatype='string' name='[articleTopic]' role='dimension' type='nominal' />
            <column-instance column='[articleTopic]' derivation='Attribute' name='[attr:articleTopic:nk]' pivot='key' type='nominal' />
            <column caption='Authority' datatype='real' name='[authority]' role='measure' type='quantitative' />
            <column caption='Empirical Observation' datatype='real' name='[empirical observation]' role='measure' type='quantitative' />
            <column-instance column='[articleTopic]' derivation='None' name='[none:articleTopic:nk]' pivot='key' type='nominal' />
            <column caption='Organizations' datatype='real' name='[organizations]' role='measure' type='quantitative' />
            <column caption='Persons' datatype='real' name='[persons]' role='measure' type='quantitative' />
            <column-instance column='[authority]' derivation='Sum' name='[sum:authority:qk]' pivot='key' type='quantitative' />
            <column-instance column='[empirical observation]' derivation='Sum' name='[sum:empirical observation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[organizations]' derivation='Sum' name='[sum:organizations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[persons]' derivation='Sum' name='[sum:persons:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:organizations:qk]' value='p0%' />
            <format attr='text-format' field='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:empirical observation:qk]' value='p0%' />
            <format attr='text-format' field='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:authority:qk]' value='p0%' />
            <format attr='text-format' field='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:persons:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:authority:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.01t4x0m16q73la12mooj805oeaj4].[attr:articleTopic:nk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:empirical observation:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.01t4x0m16q73la12mooj805oeaj4].[none:articleTopic:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:organizations:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.01t4x0m16q73la12mooj805oeaj4].[none:articleTopic:nk]' />
            </encodings>
          </pane>
          <pane id='4' x-axis-name='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:persons:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.01t4x0m16q73la12mooj805oeaj4].[none:articleTopic:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01t4x0m16q73la12mooj805oeaj4].[none:articleTopic:nk]</rows>
        <cols>([federated.01t4x0m16q73la12mooj805oeaj4].[sum:authority:qk] + ([federated.01t4x0m16q73la12mooj805oeaj4].[sum:empirical observation:qk] + ([federated.01t4x0m16q73la12mooj805oeaj4].[sum:organizations:qk] + [federated.01t4x0m16q73la12mooj805oeaj4].[sum:persons:qk])))</cols>
      </table>
    </worksheet>
    <worksheet name='TopORG'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Most quoted organizations in nutrition news articles</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='plotTopQuoteesDF_o' name='federated.0blxon918wuvlt13amf8d1xt9ka5' />
          </datasources>
          <datasource-dependencies datasource='federated.0blxon918wuvlt13amf8d1xt9ka5'>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[organization]' derivation='None' name='[none:organization:nk]' pivot='key' type='nominal' />
            <column caption='Organization' datatype='string' name='[organization]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ÊAmazon Fresh&quot;' value='Amazon Fresh' />
              </aliases>
            </column>
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0blxon918wuvlt13amf8d1xt9ka5].[none:organization:nk]' direction='DESC' using='[federated.0blxon918wuvlt13amf8d1xt9ka5].[sum:count:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0blxon918wuvlt13amf8d1xt9ka5].[none:organization:nk]</rows>
        <cols>[federated.0blxon918wuvlt13amf8d1xt9ka5].[sum:count:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='TopPER'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Most quoted people in nutrition news articles</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='plotTopQuoteesDF_p' name='federated.1474e3m0c69jby151lvup13tqyeq' />
          </datasources>
          <datasource-dependencies datasource='federated.1474e3m0c69jby151lvup13tqyeq'>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[quotee]' derivation='None' name='[none:quotee:nk]' pivot='key' type='nominal' />
            <column caption='Quotee' datatype='string' name='[quotee]' role='dimension' type='nominal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1474e3m0c69jby151lvup13tqyeq].[none:quotee:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:quotee:nk]' />
              <groupfilter function='member' level='[none:quotee:nk]' member='&quot;The Prophet&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1474e3m0c69jby151lvup13tqyeq].[none:quotee:nk]' direction='DESC' using='[federated.1474e3m0c69jby151lvup13tqyeq].[sum:count:qk]' />
          <slices>
            <column>[federated.1474e3m0c69jby151lvup13tqyeq].[none:quotee:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1474e3m0c69jby151lvup13tqyeq].[none:quotee:nk]</rows>
        <cols>[federated.1474e3m0c69jby151lvup13tqyeq].[sum:count:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Full Story' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4668' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4668' />
            <zone h='83610' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15975'>
              <flipboard active-id='5' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='What kinds of quotes are used in articles of different topics?' captured-sheet='QuoteTypes' id='4' />
                  <story-point caption='Topics of Articles vs Topics of Quotes' captured-sheet='HeatMap' id='5' />
                  <story-point caption='Most quoted people in nutrition news articles' captured-sheet='TopPER' id='6' />
                  <story-point caption='Most quoted organizations in nutrition news articles' captured-sheet='TopORG' id='7' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='114'>
    <window class='worksheet' name='QuoteTypes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='HeatMap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08rkxn81vkcbm51c075q30yr41nk].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08rkxn81vkcbm51c075q30yr41nk].[:Measure Names]</field>
            <field>[federated.08rkxn81vkcbm51c075q30yr41nk].[Multiple Values]</field>
            <field>[federated.08rkxn81vkcbm51c075q30yr41nk].[none:articleTopic:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='TopPER'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='TopORG'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='Bubbles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0in6t7u08uo9vn15vfcue18vmizb].[none:quoteTopic:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0in6t7u08uo9vn15vfcue18vmizb].[none:articleTopic:nk]</field>
            <field>[federated.0in6t7u08uo9vn15vfcue18vmizb].[none:quote:nk]</field>
            <field>[federated.0in6t7u08uo9vn15vfcue18vmizb].[none:quoteTopic:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Full Story'>
      <viewpoints />
      <active id='5' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bubbles' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAgAElEQVR4nOy9d5Bl93Xf+bnh5dzdr3POMz05YzDImSAJiZIpaSWR4ipY2nKtV15pa+Xy
      elVel72qXdXWVkk2bdkKliiRWlKBCQRJ5EGYwQCDybHDdM7v9cvhhv3jN43pmX7v3V+DRBA0
      3ypWkcDh7d+79/zS+Z7vOYpt2zZ3cRf/SKF+1AO4i7v4KHF3AtzFP2rcnQB38Y8adyfAXfyj
      hv5RD+BjD9uGZAImxiGdBpcLIhHo7QePBxTldvtSEUZHYS0JxSKEw9DeAfUNoN5dbz5uUO5G
      gWrAtuHEG3D5EljW7f/O54Ojx6Cr+9Y/m52B469AJrP5WdtHYN8BcLs/0CHfxdZwdwJUg2UJ
      5790sbqNrsMjj0NbGywuwrPfAdOobj8wCPfed3cn+Bjh7peohuVluHK5to1hwBuvQakEp07W
      dn6Aa1dhZvrHN8a7+JFxdwJUw9j1zceeSkitweh1mJ+Te+71az/auO7ix4q7E6Aa0ml524lx
      eduV5a2P5S4+MNydANWwlXO6vpVgmuJschcfGu5OgGoIh+Vt+/pBkXyVLS3vbzx38YHg7gSo
      hsFh0F3OdvFGEQrt6HS2VRQRCbqLjw3+cUwA2xYXWplL7bp9KAT7928mujbC44Ej9wibI/cI
      bqAWduwShJhM5Hl9zLJR6vXfJ2O/FdutjuMfGD7ZPIBlwcwMjF4T5JSmQjAEw9ugIb7ZuVMp
      QXolE1AoQDAI2SwkVkXIcyPcbvEMVb1lGwjCwjwsL91uq+ni38diYhweD0SjYpeJRm8fR6Eg
      xjs/L/62zwf19TC0DQKB259r2zA3KyJL65f2UAj6B8VRa+NzbVtEqq5dvcN2AFpaN7+LTAau
      XhGX9nxO/LamZrGDeTxb+w4fY3xyJ4Bpwqsvw/jY5tVL08RqvHffrcvuxLhgcUulzc8Kh8U5
      3zSFo5imIMhMc7NtXT3s2CnCo5YFLrdwutTaZluXC44cFU6oKLCyAq+8JCbcnfB64eHHoLlZ
      /G/DgLdOiAl75+9TVTHJDx0R/900b9neuQuqKgwOweF7xHuxbcFVvHYcshUY7UgUHnlMTNxP
      AD6ZRyDLgtePw9ho5a3bNOHM6Vss79wsvPxiZecHsTNMT8OuPdDWXt35AVZX4OIFMQn27IPp
      qcrOD1Aui3FOT4lV9qUXKjs/iJ3hh8/dCqO+e3P8lX6fZYkxvH1K/Pszp8X/rnQEtCwxMd5+
      S9iurYlxVHJ+EDlOz31XjOcTgE/mBFhZkSOc3n1HHAfeebu6Q69jaVE4iozt8pJgkSfGxZGo
      FkwT3nxDrLprydq2pRKcfgdWV+Hi+dq2ABfOiSPgeRnb8+JdvHWi+kKwjmwWzp9zfuY/AHwy
      J8DUpNylrVgUjK+Tk67jymV5xnf0OkzekLPN3JyEMpiahBsTm+8klWBZ8MZxMMrOtrYNly/K
      v4upG5+Ii/EnMx06nZK3nd5Cbs5WnptcA1WTs7Xtyhmk1WxntzLmLTDay0vOq/86iiUoFsDr
      EPn6mOOTuQNsJUrhFLp8v1CVDyZaoijg8f74nwtbe66uiejWP3B8MidANCZvOzQs76jdPfK2
      Xd3ykRJVlSfIfD4YGJKzBRE+lUVXt4jyyCAYElGsf+D4ZE6Ant7NMfNKiDeK2PaghEMpCmzf
      IedQiiKeOTgs5yTdPfITYMcuEeOXSdWIRODgITmnDkegt0+Ee2XH8QnAx38CpFIiknH9qriA
      5vO1bWdnxOVzaLh2fo7bDdu3iwtlQ1ysaFVQsOBKcz+vLBQ56W1iwhOtev+zgcnOId5OwUsT
      a1xuGyJr1WCTvV4hmczloLW1uh0IQiwQEGHTHbtqH0E0DYZv/r5hh0mracJm9Do0Noq/Uwsd
      nUL6OTEuIm7VGHbTFPeKsdGbtsvybPyHhI8vEWYYQpE1Pnb7xczvF/H44W23SCzTFLZjo86X
      uHXGU9McIyk28FZW5y9W3Nwo3brQuhTY4zP4jcYC9fqt15ewNP7LsoeTeTel8q1QaZPL4r+v
      L3IoaPx4VxxdvxWS/XF+Rk0Tjqoozg6rqmIXveeo2GkURYxlZRmOvyp4kXUoyk3bezcz4B8R
      Pp4ToFSC538gCKpqGNkhmE6jDC/8UOwS1dDSKthWVRW7xOkaIUevF3buAp+fV64u8fvHJ6ua
      xoNu/u0TAzRHvCRNhd/59mVmVypHc1RF4ZcPtvL0jmaUYgHOnIFCld1MUcQEjzeKKM75s4I0
      q/hgFfYfAJ8fbEuQY8s1NAf19bBtRPyNyxdhaam6bXuHOBLZtljJL18GqwoH4vXCE0+JXKeZ
      afjh96vzJR4vPPGk2Hk/Ynz8jkC2LUiZWs4P4kNPTQqGs5bzg8ircbuFQzkRSIUCzM+zUNfM
      f36ndkx8KVPij86vYvT08Sdnl6s6P4Bl2/y30/NMBeOCyKrm/CDewY0b4kg0O13d+UGs0BfO
      C2c1rdrOD+LIsv43lhxsp6fEAtPWLsZTzflBvLfjr4oj6mvHa5OFxYJIO/kYrL0fvziWbQsG
      0wnrFP7SosQzb9rWNwjyywlTk7yQCZHOOcfET12Z48z1ed44P+VoWyybfP/ls/xKccx5DLks
      vHUSFhYkbHMi32h81NkW4Oy7N0OeEg547hygVE+N2IjVFXEUzUhwD6urYqdo73C2/QDx8dsB
      Cnl5MmZmWs6hQVyOkwnpYUxflpc5/uDUGMWyQ3rETZy+PCPH4oK408hiYd559V9HKrU5Y7Ua
      Cnn5cdi2uLPJYq1KjtSHiI/fBChJ0Pbr2MoWatvyEwvImfLPltkp1mFZWxyzLLbw27b07C2+
      ty2NubzFMX8A+PhNgFD1cOQmhCNIa2xDYREXl0RLg7wkcv+QvMyxtWELv0+WlAKRhu33y9nq
      uhxPAiIi1OIQnt2ILbxj8f0+Wnz8JoCqyp8LBwagQ9K2vx86u+RsAwEOPrRfyrQ+7OPRA710
      Ncl9zIeP7RDOKoMjR0V0RQb9A9Ah+fv6tvAuOjoFQaZJ5DWt6xtkbDV9axPrA8LHbwIoighv
      OuXoxGKCaT10RIQAayEaFWHFtnZnxlVVYf9Bdg+08tiB3pqmmqrwC4/tIuRz80+fOYBLq/06
      d/c1cWhnp4iZOznJ7j0iCrRrT207gJ27RXhz127nXSAcFiUad+5y3gVCIdh/UDy7f6C2raII
      UU1rmzOzrihwWOIbfwj4+PAAS4viYpbJCFbWMEQ0KJfbbOvzwbbtIhKk6SI/fXKiom0x6OH6
      kR6S7jKaqhG1AwxeSKJWquWjKGQH+yi2tmAUC5RVD3/+2jRvXFvZZKqpCs9sa+FYdwPFTAF/
      LMiFdJG/eO0qucLme8xAQ5AvHexByRdx+zyEMis0Lo+jVDgHFzvbyfV0Uy4XcXn9eMbG8d+Y
      qni+tgaHSHe0UC4VAAV3sUTw7HnUwubgQCkQ4o2GAeYQ+UwtWpnDU+fxljeLW+xwmMs9uxgt
      aqykcjRFfGybuUJXqkpUqrsHGptuyicDglWuxjHs2CWOSpn1YsNRsdN8BCUjP/oJUCzAKy+L
      mP6daGsTocv5eVF20OsTF7JEYnOOu8slttRiAQwD2+PlbCzJq/5xivbtzhDUQzyhHqR74Wbl
      Z0WhFIsym12hYN3+XBuYMmOcywSYXsmhKjBYHyQ2OoMnd4fjKArRkS6mIiHOTCxjWBaNET/t
      yRThpYSI029AKOTmwJ444XIGLBMzHGbRzLFWym56FX7VRWugAX01AdjYdfWkQz7mF6ewjNsn
      kaa7aNIDhAomSrmE7XLzZtHLH55ZJV26fQwRn4tfHQxwLGyglErgcrNY18J/PJfg9PjybYFS
      BXiozcevDgfxZ25GcMIRURe1Upg0FBJk17oirrFJvNArFWSc4TAcu18wxR8iQ/zRToBSCX7w
      vdqx7pZWePxJsTpcuijizNWG7HLB409iNzZxdvUUz898B5vKVL5LdfO5nl+kPdBFOZ9l8sQL
      lHPVY93Rzn6aRvZTSOV57b9+n+xK9Vh314EBdj1zGEVRuPDsKUZfu1TV1hvxc+8vP04gFmTm
      9GtkFqrn+nvCMToOPYju9pKen2bm9GuC46gARdVo2X2EUHMHpy7P8n/+5WsYZpV3oav8858+
      zLGdnRTLJv/Ll3/AjfnqIcoDQy38y1+4D8224NvfvD3d4U60tcOjj4sj37mzooZqte/ndgs2
      Od5Y/Xk/Zmi/+7u/+7sf2l+7E+fOOEsXM+mb1RyC8OLztRlGy4LFBdJdTXxz6q8x7erxdss2
      mcneYHt0NyuX3iW/WjsuXlhbxROKcvWlqyyP1WaI12ZXCTdGKeWKnPv2W9RaY4ximdR8gvqO
      AMvXahOAZrGAbdt4QhGmT72CbdYIGds2uZUFqO/g3/7F8YrHsnVYls250UWeOjzAn33vDKeu
      1Fa9za5kiEf99M1cdVa9pVMQ8Iuj6vM/pCb5ZpqCIFtPW/kQ8NExwbbtXH15HePj4vhQKyVg
      HWtrXLn2AiXVmSBLllaZXhvFnHdmcQFWRq8yc1ZOMjh5ehRP0ItVZdXdiNUbi8xfrL5LbMTa
      5CieYASz5CxKN8sljh8/RSLtbJvOl3jurVFOXXFIQbmJ545f5NG2rFwQ+srlm4o3icPGyrIg
      9JqapMbxo+KjiwIVCvIES2JVnrkEEisT0rbjyxexJVN0U3OLUg4NsDw2T25VTuZoWzYrE3IT
      yzINUnPVE/TuxNS0pMYXOHN9nqVkhaBDBawl0uTWJOWWhYK8Ptq2tyY9/RHx0U2ArV49tmBv
      b+UOtZXnbuGx4tHy/48tXfu28twtPHhLxDpbfB9bMf4Qr6Uf3QTw++UldZGoiAZJIhppk7bt
      qB+S9pJwUz2KKmdb1xknEAtK2SqqQrRd7vcpqkaoWT6BrLFRPuV4pCdOXVguNh8OBwiEJdlk
      twfa26XHsaXCxD8iPloiTFYG2N0jyBUZhjEUZnjoMXTF+XoTccfoig0SbJKbMPV9Q7SMSBTB
      BTr39dG+p1dqwsTaG2jdtVPquZH2HoKNrWhuZ22youk8cP8hokFnNtnr1nn6yAD7B+XSOh65
      dxuKTEFgEN+5b0BuoYnVfag6gY92Auzc7byy19UL8cs6g1kLqgqHDhMONHJfy2MoNQ4WCir3
      Nz+OT/fTtG0fuqf2yhdsaifU3M7IkwfwRWqzrU3D7bSMdBHvb6HrQG0G1eVzM/KpA/hiDfhi
      tT+8OximYWAnLl+AhgGHCaMotOw8SLwuxM8/VttWUxV+/Zn9+L0ufu7RHcSjtX/frt5GnjzU
      Lyrf1ZCSAtDcIkjLhgahqa45EA3uPSa30P2Y8OHyAOstR8dGRUouiiivsTAvlE93DqW+QeSs
      5LKC5Q0GBQm2uLBJqlfwqFwdDrPQ5CVTThF2R1gtLjOTvYFp3x46DWgBjgQO05qPUMplUHUX
      2Ba5lUWM4p1CFQW97MFvN1BOZtE8Loo2TEyukknfbqtqKg3t9fT2xCmvpDDzRbRwgNm5JAuL
      qU0XaH/Qy74HdxGJBcEwsV0q83MXyeYE2XX7w/2Uyw2U8haWaeGPBQlEDUqp6U1EmG2p2FoT
      5bKXfDKHLxrgrfkUL8wkyd6Rtu3TVD7TH2ck6qewlsUfDVAM+Pirc9OMLt5+GdVUhQNdIX5m
      fwNeSiiqittWCF8bw525/fJsqwpLTT6uDodJqDlURSXmqmN4vEzd6PzmiJ7LLYhPt0ewyeGw
      4IDa2j/QCfHhTYD1GpVnz2zOh1dV8UP9AcHwut0ie/PShcqFnUJh6Ox8rz7lckzn783jJLXN
      KquIO0ZfeJi8kQUUOgJdeCcSmIsrmybc+vlaUVVsy0T3+Ei/Okb++tImFheXjmv3ADmPB8sw
      8YR8RFwq2eNnMdKbIylqRxN2fweFXBFFVWhsjFJvWuh3HgsUhWLAJusvYZaKKJrO6lSB8ZOT
      mOXbx6DqGu272+na10whuQrYGIab68dvkF7azCaX/V7YN8BUuoANtPvd6Bcn0NYqMM/xCJ4j
      2zg3t0axbBD2uRjypWkozW/aV1VNIx5sIIoLxTAw3S5OBqZ5k0tYd0xkt+rhmPcAe7KNKMmk
      OBbputARVNJ2tHfAAw9+YLWQPpwJsO78TuX/7rlXbJfJBHz327ULsDY2weNPsmqn+NroH5Mz
      qoccW/zt/FTPF3ArbubOnSA1M1HVVlE12vYdI1DfzMzXXyJ5sjpXobg0Or7wBOHt3WRHZxn/
      8jdrisgje/pp/+8exc7kMd8drxntUDvjqD1NTJ8Z5/Q3XsOuoSPoO7adkSf2U8oVefU/P1uT
      pfbXBbnv155EUVWO/9FzZJaqM77+WJBjv/oEvkiApatnWbl+oaotQPOOg0Q7+3lj4UVeX3ix
      pu0jbZ9mT/0h8a2/822RwlIN8Tg89ekttqKSw4fDBOfz8MLzVWn797C0KGr6nH67tlgbRAKc
      x8tLxjvM5moTWZlyCrfmoa7kZ/Hyu7Wfa9vkkyt4CLHwrRppFwCWTe7GArGDQ8x87UXKidpx
      8eL8Kr62BvSVLBRqcyB2Oo8R9PHWX7+KUaxNAK7NrtK6s4vR1y6yeLU2kVXOl1BUhZXxRRYu
      1y6xWC6UAIVwk4/5szVSGG4iv7aKGQ/x/dlvYjl86/ncNLvqD6C/erx6Rex15HLirtEgHwmU
      xYczAa5eqZzsdidME0JB6crDdj7HN/1npWyz5QztST/FNWdZpFUukTs7i7HoTGRZ+SJ6yE/i
      hByTa2XyhEIS4VEb5kfnmXZIuwBBpCmqytylKYwaKQ/rWJtNkF/L3nTw2siupGjodJNbddYm
      26bBFWOUOZylmYZdpqHkJX5xSq5WUKkkokk/5kS5DycKJCOSXsekPMu5ll2SJlhWiouUaiS7
      3YniosOqtAHpCxPStoW5Goljd8BIbT6bV0NqPkE+KWdvlg1yCbl3YZkWa7Ny6REA2Yz8e1tL
      OFS82IhCQa7K9RbxIWUcbeHstoV6k64tUb6gbCWa4CBu2QjVIz9mZQsrmLkF/bDm/oDSuhRQ
      t/D9rC14lEt1yxtrqnwnzi3gw5kAW9F+9vXLdWcEAvFO3JrcS+wI9OAJyo8j1CtJ8gCxg8Mo
      utzkCgx1iMrREgh3yyeE1XXEibTUSdn6IgGibXKyTLfPQ0xWPgm01NVW0W1EtLlPXhXmD3wg
      l+APZwL09DrLFkHEfltbYfuI3HMHh9jfcFTKdEfdPqLtfSLm7wBfXSNNDx5C9TpPLn9PC6Ft
      XYRGup0HoSjU3bcLRUZw79Kp39dHuNm50rU74KHr4ADtu3ucnwsMPLhD2rbv3u0Em9rQXM7M
      szsYYVfvg/h15xSJOk8DPfFd8trkEQcS7X1iaxPAtkVEZ2lJiFhyudoXmFJJqIEWF2HPXucc
      7527YWUVenochOM2dLdCTOOAt4dOd1PVu4Biw5B/mE67Ccs0iPXUzv1RbY1YvI/yWpb6Y7UZ
      VMOj4rpviPGJMXwPjECNlANTBd+DO1kMaKw2h8i7FOwqgy6ZBqkGDzdmp2i/tw9Lrf6OFV2l
      98HtLCzPo7f6CLSGqybh2bZNuKsOpd6F1uwh2B6pmbDX2NNEc1ec4tQqsdZB7BqlYhRVo75v
      O0oqz/2xh9BqFAT2Kh6eqH8CdWFRpLkEHYICPb1CT7CyLPzvxxi5l+cBshk49Zao8rsuSlEU
      QWAdObo5gen8OVGGcGPnk/XCqTLweMQFybZv//+4SxBbA1/hvRRKU1G46LZ51Q/5DXMsVPIw
      lIrTWAjeSotQVFRNw7Ys7A2l/mzTxpooYM8Uobzh71UYs2lbXLBXuUaSIree0RCIsMOI0lq+
      fSIs1Xu5MhAjUXfrn3tRGVH8HFPCuG6ebW3b5tzMGK9cfZel9K1olVtx0aQ30qI33XaHMDST
      KWuW5fwy1s2FSEEhpkXpcLXhVW+t2kWrxGR5moSVfM/phW3kpu2tsamqQsQyqFdt7I2yT7+K
      2u1Fbam0GyhsXIUyepHroRVmArfzDPGSjyem4jQl3qcT67o4Ju878GMR1ctNgFQKnnu2ep62
      1wuPPSGkbJYFJ98UNTurId54s7O6Lcp3r9SIjHR1C3GEaUJpGdKvg1JZFZZ1ebncvQ/D7Yd0
      nsC1FfQqK5Hm9lLftx3LNLANk8T3zlOaqt6kLritC393M4Zh8N1TLzG2Ujkyoioqj9zzADsa
      usC0GDVzvKyksbTK4+j0BvmJlj48qsZLb77KSyePY1X5JL2tfdy77340TaOgFvn7Z79BvlA5
      f9/n9vH40aeIRepIrK3y3OvPUihVrkfqdXl5/OhT1EXr0Vwa9rlRCteqcyuBAx2EDvYCNqm5
      SUrpymSajU222Y/ZFgNFoSOh03jyEnq5yo7m9sDQkMgESCYFO1zthBGLwROfkq+FVAVyR6BX
      X64tUigUbvXYHR+r7fwgtrJYTFyOazk/CCFFMAQj28A4X9X5AQLlAvsTqxyIHqJhqlTV+QHM
      UoHs8jz1vcNYNwo1nR8gNzZLaLiTK2qyqvMDWLbFy2+/TrGvHv3oMK97C1WdH2CykOF1I8mi
      XuaVt9+o6vwAY7OjpHxZuu8Z5LV3Xqnq/AD5Up6TV0/QfXSQ0zdOV3V+gEK5wMmrJ+i/f4SY
      atd0foDsqSl8Sgzd46vq/CB2mOB8nh3aEIfDh2h9Z6y684PoOZBOi74Gc3O1j9eJBLzxWs1x
      ysCZCJubhTMO7CmISVBXL2ydesjatrCZmZLrN5vPQyANixKkV26ZVNlPyolJBsq5NP5wnPm/
      eR277NArwLQoFYt8951XKDso2UzTxLIsEiE/k04sJ7CYSVMYG2dq3Lke6cLcLI3NLbz64guO
      tpl0mmKxyIUzZ5xtM2lamlsovXQRM1OjcvVNlJNpCu6klDTTKOSJZApit3dCOg35glw3zkxa
      FEb7EXYB5x0gmZQ/t49el6siDCIDNCFZrHZxAVbkdLsAxWn5HrbJsVHMrFzT58WzV8lKdnO8
      eP4cy1k5YsqwLM5IVnZeSyY5/fZbUrYAJ1+XXyWnzl2muCD3TXIz8xSd+hrfRDmfxZqQLJpr
      mqIbkKxt6keTTzpPgK10BM/lQJa82UqrHMuCkjyLKynbBaCckn9u3pAv5loul8lvofjrVkiv
      VFLO8UDsRrJIr6WkFzvbtLANuRdtmQZWSbKKN2zNN37EjvXOE2ArxWrjcXkG1euVL33h8UBA
      PhHKJVtPE/C3ypNNsS0Uq41Go4Qle+gqQFCy+6SiKHT2yJNNoS2QkPG2FmlWW/W60XxyJKSm
      u9AiW+jcuZUjzVb8swKcPbC5RU6QoKrQPyhqQ8qgsxu65MgYOrugVZII0T0Ehh+QMlV1F9He
      fnwdcoWYmu/dTUdXt5TtvkOH6a2Tm7Qhj5dHDt0jZds3MMje/QfQJVNGfuLzn8claTty7Aj+
      HjlJZGz3MP56ufcWaGhGkenECYIwPXBIztbrc27o5wDnCRAMyhVo7ewSO8De/c4Vjd1u2LET
      9u5z7jTucotCruEOaNrtPI62I/jiXUTanCdXtLMfVyBI06cOo7hq0+zuhgj1R0Z4/Omncblr
      r3x19fUcOHyE7c0tdDj0LFaA+3oH6B0YIOiwmvl8fh5/+mmaWlrYtXdvTVuA+x56mOHtI+ze
      7yAlBe594EEa4nEaHz/omKrhigWJP7yX+oGdjtmZutdPXd+IELbI1PrZu0/E+ZslJuLefXIZ
      BjUglw4djwsVV7V2RK1tQsiyMC/kbMEQrCUrdkIxPDozR7cx5UmxaCcpRgMElzKolbqmeL2Y
      e3sxS9OYUyexPREoZ1GMSlEKhZRrmFXXXpbH5tG8YcxSAauiLYQaOwl5W8hem8a2bDSvm9JS
      ErvCBcId9tH9zEFc2SR1uk7YH2B8bhajwphjdXX80hefJuhahuwoHWEvC9ky6QrhP0VRGGlu
      JR4MsVIq0tHXx42rVzEqZEj6AgEOPfkkroYG5lJrdA8OkkuusbxYOU15cO9ett97L1NrSTr6
      +1lZXiZVpYNM38AgwyMjjI9ep6ja+NvjmJPL2Mbm+4OrLkzd40cwbBWzYOP2RymklypqPWy3
      j7XoAFcW8txYWCPf0k40n0LLVQgOqOqtRXRuTkyAxGpllZiiCH4o3iiilMWiYIodFqZKkGeC
      bVs0Tbt2VQxQQWh2/QFYmNt8G/d4hLp/bQ3KZWyPm6m4wkvRSZaUNLdYQ4W4GeSx7CDNc3mU
      kpBE2q1xCnN/gzF/AsobnNgTwt2xH3frbpT8CqBg+Ns581aZuTn9Ntmgy6sT7w0R7/FRzqZA
      AX9dI/aCQfbtScobU4JVFc3vwdcepzC3gm2Y6GE/sXoXUTWDbt660NqKwiJwUlG5eOMG5XKZ
      UDjMnt19bG+5hseahA1lGctKgKvqPVwttJMoFFAVhaZgmPl0iqJhYG5wHq9lE1haIXtjkmw2
      i9vtpnlggJVomKJbvy15Iur20FwySI1NMH3jBjY2rZ2dZBvqKMYilDdcJjXAnVgjsrrG7NQk
      tm3T0tpKMpEgnU5T2uBoHq+X7V0DHGnoI3d5CqtkoAV8uNqbKKg+rI0HBwV0n4K3voBRTmIZ
      BqrbzXTRz1feTrCYLr83ZlVR6G0M8us76+jPL9+SRNbXi4hgsXB76UtNE2d8t0f40brPVbL1
      eETV6Z27tlRW8UeTRE5NCqWXWSWGruvw1NMQb2Q8fY1v3fgqZatyTreuuPgnvV+kNdCJXUiR
      //t/hjn7TtU/7dr9s3ge/B2MksmJv3iRlfHqgo2ugwPs/uxhFFVl9Y0LzH795erPjQbp/o1n
      8DREhJDn+CtVbfEHxO+LRLBKCbLXfg+7VE0MouBp/WncjY+TKRX5ytsnSOQrE1maovLMjt0M
      NTazkE7xl++cpFAlF15VFJ7ZsYfhxmZMy+Jvz53m2nL1xoGD8SaeGdmNAnz1v/0ZF85W5wi2
      jezgZ7/wRVxuN6npVaZfu15Vmqm5dTofGMLfEOStyzP83l++RrlKlCjoc/OvvsxN7ocAACAA
      SURBVHA/27oaBPn1ve/W7m+2fUSk25RKN21rcDzD2+HovdX//Z3jft+KsFIJvv+s+AHVYFmw
      tEi5p5OvT36FglmdYLGwmM1NsS26C+ut/4px+Ts1/7y1eAm1oZ/RczmmTteOMafmEgTjETzA
      1J9/v+LW/t5zCyVKiwki/U0oTsV4y2VIJrB7+yhM/zlW9nrNcZiZq+iRXfxgdJrJGg37bGwm
      kwmGG5v51oWzJGswvjYwlVxlR0sbZ+dmODVVuwThSi5LyONl6vx5jr9UW7e7vLRIKBymubGF
      qVeuYtVoBGibFvnVLDSF+Hd/fpxMvrp4pWSYXJla5vGDfain3nIum7i8LDrYX73sTKYtL4mj
      kWT06/1PgNHr4j9OKBS44lniouXMcubNHC2+Vnw/+HdgOsXQbexihnfeCWJJxKONQhnfWors
      dYeewkBpJUXUU0RPSqi3Mmns9hCF5b+DKqXYb8FirVjmhXmtZsoDQNk0yRQLjCecx1A2TXwu
      FxcW5shKxNuX0ylm33qbdMq5S+Py0hIjHSOkJp0ZbbNQ5u3ZBG+MOssn09kig40BWq+dleua
      mU4LQlRGQVYsiou0BN6/HkCSBQRYnZNk9oCJ+RPSpFdu/AyGhK4VYGlsjoIkywlQuCzf7tMa
      Pwe2nFyvtHYeQ5LoubQoX9h2ei3JgmRR2WQmzeyCRKoBkMtkWByTl0RevS43ZhuYvXZDpLnI
      YHGhcregSshmpFvRvv8JINvrFijXyGe/E1ZZXgdr2ltQCNlgbaEFq6psoWiuuRU28oOpQlOq
      dg+rBEWRlhfatk15C+/NtQXJZ6G4hTFvBaYpzSa//wmwBYYx5pdnWxub9kt/nEBjA4qkbTAe
      wROXZ3KVLRAsavMQsvWdNa98Z8RGp7KDG9AcihCWZMDduouIZJtUl9tNY6d8G9hgTLJgLtDa
      1SyvAQ8E5MOcPvnCy+9/AshK2Twe+rY/KmXq1Xz0Rraj9dwvZe/e9hmat8lVSu7Y00Nkp1wK
      gasuROCBw1K2BIOonTtQfXLVj+tbH6Y5JFf9+LHB7QQkiuAC7GxpZaBBbqHZ2d7JyM5dUrbb
      duwg0lmHIpHiouoajz28HY/LOXPA49LYvW9QFDiTwchOedvOLunyKe9/AgSDcPAwjivf7r0E
      o6082PpUzWK1AIfi9xF2R/E+9Dsowdo0u9q4HdeOn2LH0wcdi9VGWmJ0HRwkMNhO3dHaemNF
      12j+zFFRzttJm6yqcOAQiu7F1/lFUGqvOnp4F57oHp7athOXQ3rJ/b0DdERj3NfT77i33NfT
      TzwQ4khXDxEHZr3eH+CBvkHue+gh6hx2uYbGRp54+jN4on7q+h3SHhSF1kM99HTU86kjtQsC
      a6rC//ATBwn5PaINq9PK3twiNMEHDgpOoBaamkSWgSS2xgOUijAxIUgJy4JgQBBglzd3/bNU
      lcnOTuZ6e0kVCgQ9LubLl5govMOd52AVlZ36MHs9uyjns7h8QdyFaZQ3fx87dXv1MhuwfV2U
      e36LcsGNomvkCmVGry+QS22+JAWCXrbt6UYtlVF0DT3oIz+1yNq71zfXBtVV2g73Eu1tEJcz
      rw9mpsUF7A7YmoIxEsZq92OV11A9cTALlJZfwL6jTKMNrChxLuv7WMwlCLpDFAwvixk/xTuY
      ZwWbbf4C27wJytl5vIEmruR8nC/EMO+YCgqwr7mBfnuUUmYGUCi46jmeriNtbr4fxTWdR9Zy
      RDNZsG3WNI2vnz/DaoXLZXNzC5868jCRskZ5LYsrFiS9ViZf6bqjQLjbh69ewyjmUD1+vnZi
      lhcvr2zKzNU0hWfuHSYW8rKQyOJz67RZWY4uXMFTqedZLCbUg4YJLl1kf46NVo4GNbeI1b9c
      EnbhsEjBCEeq7ghyE8C2hRb49dc213DUNFG7X1WF0guFTDTK3xeyTFagx+tC0NFokDYXAYUm
      PU5kIocvu9k2EI1S71qG6eNQLqL4YiTn21gdDWHfGZN2u2BbD2kLzLKJ2+/Bm0yhTc9jl26/
      bGlBH9F9g1hlg+JCAkWBYHOIaGoGl1UhjFhXB9GYqFKNgtmgkddewFI3R5X0yF5UXxtmZhQw
      sfQoXx+/xgszo7cxvgBhbz0P9P8MEMW0LepcJurYX2Avbs7ht4N9uHb+zyyWXNjYNAVDxNLv
      sHruDzHLtzuw7g5h9Pw8meghioaBR9Ppvj5O/FvfRb0ztcDn48b2YSZiUfKFPB6Pl22dfUQv
      r1Ka3Ew4uTuaCRzcQSkv3qk7pJJPj2GUNodUl6wAl40mxpcyYMNQZwPZQonnTm7WPjQEXPyz
      nTH2uAsolimK4ZaKIutg0yDcop2qaYJlijN/OCx6yd0Z2lUUQY4dOlwxqVNuAkyMw8svVieF
      FEUUth3eRq5U4qvvvlUzJNcRreNn9hxANQ2m3nqJwlr1GLMv1kDHwYdQNI3lF99l4btvVs1Z
      V9w6XV96isBAOysvn2H+29Vreyounc4vPUloqFO8tGe/I+qNVkP/ABy7D6u8Svba/4Vdrj5m
      PXYYX+eXsBWVPznxn3j+6nNVbaO+KL/z2L+hNdjI6R/8C5amjle1DUZ7Ofj0H+ENxJm9/h3O
      vvivsO3K30RRXey8/3+ndeAz5N58k5U/+A/Vv5+mUfcrv0zgwQewCiVG/99vUFqqHuYO9LfR
      9aufxrYtbrz+fUrZ6t/aV9dIx8EHUDWdr75wnq8+f76q5MDr1vnXX7yfkZ7GW8WUqxnrOjz6
      hCijk0wIhrhWmHRgCI7dt2kncCbCymX4wXO1GV8QEraeHl6bm+ayQ/w6VcijqSqB1XnSDg3f
      jEIOFAXd9jL9lR9i12JmTYvcxDyBvjZmvvp8TcYXyyI3Pkds/xDqqROidEstrK5iRyIUst9z
      ZHytwgyqt4lLawm+8vaf1Cw9UjAKTK6Os8Pr5/o7X6753FIhgW2VCdYNcPr7v4lp1PjgtsXK
      7CnaW59g5f/5A+xa8XbbpnDpEqHHHmX+2yfIXq2tviuvptEjAdKZabLLtfkEI59F8/iYy6n8
      /tfeqKm3MUyL8fkkD3dH0F550aEwsSX05AOD8NKLzurCxGpFhth5AkxNipwYJ1gWdiDIN5fm
      KUuokPKlEg2LU2K7c4BZKmJO5shec2ZxzXyR4kKC0rIzy2nlS/hboniuyBXYpZSm4HoVmVi+
      bRX51tQNJladGfBEPkFj8gp2xplwSieu4w+1Mz9WfVdZh2UWUS4voF+WYLTLZQhGWD0/i+VQ
      jRqguJLAiJawJOp1GoU8L00aXJ50HkcyU2BvaZl4UaKebCEPgaBowypzlbVtkUW6YRdwjgJt
      QXOZnZ6Ucn6AVCaFISkZLGVSFOadKw6vI7cF5jJ3YVRaBmglJqHKkeNOlDNXWco47Crrz7VN
      ri9KVpc2S8yPfV/KFiA14SyIX0f+yihGhWYZlVBOZSin5Rh7s1zi0qgc82zbsDAt994AcTyX
      lVBmMpvStp0nwFbqz265dPUW7H/MZbFvPfaDGoOyNfstPXoL6b4f2O+DrX2/rQzjwxuzhCZY
      vmVlsL3TMb69jnAogsslx+y5gxF8TfKa4EC/fJtU/0iftEOp0U5Q5H6fKzhIPCAnGdQUjYHG
      7XJj0Ny09D4uZQsQ6pFQ892Eb6gPV1SutasrEsIVlrPVXG5G+uQYcEWBxna59waI0oqy+f/B
      4CZb5/9nR6egoZ3g9kBXF/va5Koqb29qoaFHrk1quKWT2KHtqG5netvTGKXlc/dJibvd8Qj+
      4W5Re1IGw7txxeQYYnf9vTw48Aia6jxhBhu3sW/vL0s9t3Pb54l3HsPjc14QdHeYnp/8bbSY
      syBd8fsJP/YQoe3dUuNofGAfIcn2stGufh7c240mURW7tzXG4IOH5Zy6rl5cgmXkk4oiwvV3
      oPZfMQ2Rhnr4Hmdh/L59oKgcamikxSFPqDUcpTPYgBXrxButzUZ6I3WEWnooWRbxJw7W3EoV
      TSX25AHSikHDkwdrb4+qQstnj6JoKay92xwnud3TQz6qocQeRHHXHrMe3U/B20/MV8cjg0/U
      tA15Qvzinp8jGu6kvq325ArVDVA//FOkbYXBQ/+8pq2iuth+7/9KSc8R+pnP1bRF06j70i+h
      FAo0PrIHd33t7xcc7sTf10qksQdXoHa+kr+hmUB9M21RN5+7f1tNW49L41c+s5NU0Mbc5ZCq
      oesiEyGdEgyxUx7U8DbRdfIOVOYBpqfg9DtCXGBzy+mqXRY9HpEdevMyktM0vheLcM3nxdrg
      hKWixexEkaW58nt3kYAbPttjMVJ3e0UV24b0sk1ywUUhVcDGRkEhZJapKxXYOB1t22aCFBfs
      VdKq8d4444qfnXYdjfhuO1e6okXqjiTxNMyx/gMVU8c934R7qQnFvvX0jJ1g1HqLOa69F/vR
      dRetjXFam5rQNiwMJcvmeKLM9xMqqUIK27ZRFEWw13dcvlwoPBSs45lwI1HNjYIoqzi9NsFo
      4iqFDVrmEgoX9ShXXPUYN0esKSpDms1Q9gYBa3MwQVG096pPKyh41lzEJxoJL99+pNU8bmLb
      h/E1NqDc/NZlzcPcjRypZJULv6rcCoRpoLR5ULs8KK4K66lyy1bRNE7MKzw7ZpC7I3jkDxcY
      PrxAqP5WaLc95ebYTITWbIX0h/Xvue6fHo/QAdzpo7pLpEbs3iNBhNm2CHm+8VqNoqR1IilJ
      Qcy6C+cr0tImsOj3c2lkhJJLJ5sz+NvnrpNOb06BVRWbnqjOrz/UQdiroeoups4sMn22Mp+g
      2RadnQ3UN4jV543rZ3lnoXJsXkfh/r49bGvuQVHA22qhKF9D81ROxdVLrfjMh1BwkS7McuL6
      71Omcgy9rr6DkX2fQ9PdKHqYPzzzIm8vTlS0VRWVXa17qQ80oCoKR7JzDGNVvPDlzSJTniAl
      oGAZ/NXMReaqhBvDqsavbXscd24JsFlbukBq+WJFWyzotI7S4j4IgMco47UNtAo1iWwbcvFO
      UgSxSgZmvkj6/HhVbkWt8xJ7cjuKR8Msl8gszNxWfXsj0raX2WA/s4kCtmKTCZ7Hjkyiuzf7
      nMtUeKq4kwGrWQxqbm4z27sRQ8Pi+GTbQk/c0QXR6lnAt0/ZxUV47VWHoqSrIlHsyD0wXb3H
      kwa05HI8vLDIY33DvHliqaLzA1i2wmjC5KsXitQP7yOfCVR1fgBTUZlaTBO4ZwcLnb6qzg9g
      YHN8+iL2oW6an9mHK/S9qs4PYLhnKXYuUNo3wtsLf1LV+QFWV6a4MbuAt/3n+dvZtarOL36j
      xcTqGD+1+2f5UryfbYpdNdrh0zwMeuvZds9v86Yarur8ACnL5GszFxm457do6n6Y9GoN8ZEK
      k/rrmE8MU/epJwl4XRWdH8QCG1iepGVvBy2fvZfySqq2lHS1QOndFRq37aWcz1Z1foCQUmCf
      b4Xf+ImD3HtMQYtPVHR+gLJm8+3ABVb3D4uKEU4qtqtXYNsIHD0m+k3UcH64kwh74zXnPwAi
      J8brgwsSNThTKc4U3XzjlHPzu4XVLHsHmpn43inK+docgWVa2KbNS2/9kJyDUsg0TQzDYKA1
      iZF0rqtp5idZXFljbuyHjraplSuEux/lT9/+U4pGbba8YBQIqSpDievOks9ShjnL4s/O/13V
      RhrvjaGwRkekg/TFr5Bbc9DXAoXMPO2rNyt2OCGTIW16WXnFmU8or6ZRG9ykV5y/dTmfxVsf
      5wdLz9bUioPQSJtGkb5352v3E16HYQjCSwK37wAyLwREh5gJZ4YTANtm9KRcsVrLtnnl7bGa
      jZ43YvLcKMsSVaABzp95FyMjO2aDlbGvy5laZS5e/GtSBbl3d3r0RWnJ57kr38WUJN4uT59k
      dfaUlG1m4RLmrGQ3zmSStbcvSwnZbNNi5ex5uefaNjcWL7BWkusquTR/GbNGKfbbsLoqkuQk
      8P70AJa1pdany0X5Aq3JZXnmOV+U1JMiitVaJXlNcLEoXzR3aa12w+mNCEg6NEDAUWR/CyvZ
      RawKl+FKsGyDkin5+ywTa03+W5s5+YLAhVzacXd7z1YxMGr0hrgNpSI4lLtfx/ubALoOWyh2
      2hSUr9jVLNm9ECDkEILbCJ/fj+qRJ9N8fvlxtDXI8RkABV2+cG9ek1ODATSF29BccnJEVXXh
      cUvKQzUNPS7XfRJAD8u3LQoE61AliUUfHlxIasA93vcpiYxLMnDxRhiorfq59RdURu7bL2Wq
      awrH9nZLt/Ds2N1LR5ecNHPnnj24wsNStqhuGoe+IGeqe9m+/fPEHRRs6zgw8Dh45RaPPSOf
      w6XKfcjd3fdT3ypXVDbWcQhVkrCksYnwPrkO7YpLo/HAXjlbVaW7ZScxB05lHe3tu1FlF92m
      Zml2+Har3btFPNUJe/eJSdAtwaD29NK/o4/7djm/8CPbO+htjTH8yG5Uh767Lp+b3qPbePTJ
      TzlWP/b6fNz7wIO4ovvQAs71YjyNT9LU8ySx5n2Otj07v0A01MJnd/yUo2080MgDw09Dl4Tm
      uWGYePsh7u9/2NF0X/sBtjfvpG/vr6A4TBjdHaJv3z+FXbudyU2XC/bsJTjQQaDXmW2tOzJC
      dHgIf53zYhDp6MMbinJP04OOtkFXmH3xo7DH+Xvg829JEnl7FMjjhUhUFBytVPZEVQWhEAwJ
      Bq65WTDFVbqmZONxEoeOMJdJM9TVwMxiiqVk5XP7SEeU/+mzOymnE/ijAdw+D6uTyxVL8Wm6
      xt5P7cdtmIR0Lz6fnxszk+91StwIr9vNL/yTz9Pu86Pki+iBAYzSOLZR6VyroId346o7il1a
      oK5lL6vzZylVvOAqtPc8xvDOL6Bm5+mOdVMwy4wlbmwivQBC7jq+uO9fsLRik1brwDTwlRZR
      KpyBi6Eu0j2fYbmos61pNzNrUyxmKqeCD8SH+dyuz7OYXSRt2/ijXWTm366Ytaq7gvTs/iXc
      3ig5I4EdjaDPr1KxAozbLSp9h0Ioy8uEhjvJjs9jVOmmExhoI3ZkhOLcCoH6FvJry1hVIl3B
      xjZi3YMUU0kiSgi36mamMF3xPhDSAzzZdD91Zg4roIhxLSYqjzkQEBpjVRVaAdsWRXNrTPTK
      THAyIdqcToyLEoi6LiZGIS+0suuOpiiiWGldnZBDrje8i8d5Tdd4x+shs+E27tPcJOZNUssW
      Y7NCcTTQXsfucJ499WVcG4pL6V4/aHUkZkzmr8xgGULmGA15Ca6lUJIbHFhTSQYVxutMrk2O
      YZTL+Px+drS1cSwQIL6xZo6qYrU2UOrNYJQuYBWFNFML9GIVl7CtEli3PrJJgLnVLMvLC2TX
      bgAKdc17aXeHaPE3om7QsVq+et51h/n+6iQX5s5i2ib1gQY8pQGWpjpIJm9tuH6PzrG2Ir+8
      u4Q3ewNsCzvQxHV9kHPqCGnj1kfTFIPF9ElS+RNcXboMQEe0i76GAWbXprm+fBXr5qTTFI1u
      b4CjuoWWHMUsZ9FcASINw2TXpijlV95TkSmKRkNgiGH/owTTuuB0dF3oag0TlhZuK1xlam5W
      8y6SGZXinIje+DobMdJ5rLJxW28xLeRF7w+jdwUopsW39sUacAfCFNZW3/tnIHoMJ4JlZuJF
      JktTWLZJQA/S6wqyszBOwEhyi052oedb8CaHURfSwhd9PtGut1AQ+u2NPdzq6mDvAahyVK4u
      ibRt8XDbFlXgfvBcdcmZyw2PPgbxRgzb4ntXL3FuvnpO/u6WDh7uH0axbZYvv016pnp4MtLe
      R+M2sfVlR2eZ+tPvVW1op0cDdP7ap3HVhVHm59BefB6lSgEv2++Hp56CUBDbLJCf+E+YmWrC
      HxV38zO44o+AWUK9+A2UZLUxK1i9j2C0iYoZL56e4D/+3TtVs0gG2mL86y/cS8jv4Z2ZHOcX
      q8e5O6MujnQF0BSFycQEv/f8vyFbJaQa9ob57Qf/Jd113aRXr3Hq2d+gXKwcYXN5oxx8/A+I
      NGwX3/vlF2vW67RHdmLv3S8Khv/lD0mfr/796h/YRdOnjoACmcVZ5s6+WVXV5/IHaTv0ALrX
      h7F2ltLkH0MljTaguuP4e38T1VUnHP75H1Qv368oghgb2nwHrH5TUBSxdei6EMPXIpvKJXj9
      OFgmF5cWazo/wLn5aSYSSxSWZ2o6P8DazBjZpRkom8x9/aWa3RyNZJbFb76BVjbQ33itqvMD
      KLkcyhtvotgapaUf1nB+AIvS4negOIc2e6qG8wPYqBMv484uspQo8KffPVdTb3NtJsFXnr/E
      SgEuLtUmeSaTZSZWTUzb5I9PfLmq8wOkCim+/MYfYtsWF1/791WdH6BcSHLmlf8NW1Xg2hXH
      YrXKhXOoy4sk375S0/kBVl4+S/b6LJZhsHDhVE1JazmXYfnSGVSrQHn6K1WdH8AqLVGY/arw
      zzPvVnd+EJP6xJviZHMHnCWRM9NwTkIyWCxCNMbfzU6RdyhgagPZUpG6+QksCVWYUcxjzuRJ
      vevcSbG0vEbYW8a1JKFASqexWxvIL/+Vc21P2wQjh2tmFCyHGLNtgWXwtXMWFyacibqJ+TU6
      u1tZKzrHxFfzBoZxiWcvfcvRNl1MEczNU7zhzGiXC0lC4V6CF2YqN6W4A1Zyjdl3ZqQ6bJbX
      MtCkkVlwlrSW8xk86jUoOCvkrNIKursf9Y13KzbouN345mmm4/ZgjIQkck1aMlgYHyMjQ1UD
      C8kEecmWqvnkCrlp54rD68idlS/Ga01cAFOu6KqZOAdVOs5seu7yVWaW5Qgkw7Q4cVlOMlgo
      W5y4Icf4Aly8/qy0bWbyXWkJbHlukfKyZJvURIb0tHOKBoBtWeSXJdvc2gbWjbPV+1PciVRq
      U56b8wRwaAp9m2m5JN1SWLUtpAvF2jZmXr7Npuq0Gmx89Bbar0q3gAVs0yC/heKvpmRvVxsc
      d9iNKEimBAAYRfk2qYptV4xgVYJtmphbKLBrm/IyR9uQL6ZMubTp9zlPgLC8JDLU1oEu2SY1
      EAih63IkjysQwtcsz8xqLfKSOrVtG7KCVSXYLm2rRttplCwUq6oKvS1yJI+qwM5Weea5I15b
      hLIR/uZh6aZzajCAEpT7fZrPQ7CCGKUa3OFmaVu1aUheEhkIvQ9JZHuH3EtxuVC6u9nVIlck
      drixmYYuOTY51NRB7MA2x06OAK5YiMAj94rLkRMCAZT2fvSIc8dFAFfjgxCX0+4qzXt4SFIG
      2Nca4/5tcoVf+xt87Gs/QNDjnAbic/l5+t7fxiXBPGuuAM0jz4hwogT0vbsJDcuxybFDw4Tb
      uqVsPaEooe6nkHFN1duK1r5f9KJzgqKI4mZ3sNTOf8XlhoOHas8yRRGkSSTKoc4e6v21V4aW
      cITDXT3EuodwB2vL7zzhGPV923DHozQ8WFvgregaLT95H1pjXOSC14KqwpGjKF4/npafQNFr
      O5Qe3Y8rdgh6Hga3gxi8YRs07mJ3f5MjAx7yu/n1Zw7QHHLRHKq9IwY9GjubA8SDTfzs3l+s
      WRpeVVR+bt8XqIv1Mnz4N2sK/xVFY+jg/4jLExHf2qkse7wRhoZpevoeXHW1Twi+jkZiR0bw
      Reup6629GymqSnx4D65QL+6mJ6mtf9XxtP40iuoRVQmdJJHdPULHcudjpGuDXr8mQkl3VohT
      VSFM9vneqw2aikT428wasxXO4tEA9LYo5Cxh26jVExxbw5PbbOuLNhBsaqOwtoplmuhuD/lz
      i+TPz22qDaq4NELDXaAq2CUDLeAloqQJFldR7gy9eTzQNyDGvpYAFMw6izw/xFI3s745M0qi
      GCWbnkdRFBqivTTnkngqnIHtSBdlXJjTb2NbZcxAC39yrYUXZ0Kb2iJFQj5+8tE9RGMRLNvG
      59KYT5dIV8ie1fUMrQ0zJMtTgE3c28zU4jTfv/DsJh2CT/fxYF0rO10ujHIG3eXHKOdYnn4D
      +44mhbrLT8/AMVrbh8DMg+bFxQD62RWU5c1hwwXdxdlQmNmbTe3aww1EL6/iSW2+K9p1YZQd
      /WTWcoBNXVccry9Hbnlz6NRQXYzTzPkVMAyLupDOgcZLDAfe2DQNFCWA1zyKK1l3qzao3w/X
      r2/OUlYUQeI2NQkdi6KKU013D3i9W6wOncvB+Nit6tChoPhnV69uuokbmsZYVxdzHR2kCnlC
      Hg/L5jUmi+9gc/sHdqGzUx1mh2uIciGHyxdA1TTWpscpZTdHUjTbQ0htwUwXUHQdu1wmc3Wa
      cvKOC60C/oYgnfcPoltlITr2+QWxNz62KSJguxTKOwJYjS5sYw1bCzN2+QWmJ97cpHByufzs
      GP5pmht3ifx+bwwjvUDh5H/BTt+uZrMUnengQc53/jrzKYOQz43L54NQBOuOlVkBmsNu6v06
      ubJFwKUyUzjDWP5lDPt2R9cVnf7gCEbWZjmzBChEsPBc/xv03J1xcQV/uJ36tntYDz74fAEi
      yhgutbCp7rTm6cKrPYaWViCbxQwE+eHpd3j9ypVNxc/cms5DOw4z2NCOmcqhR0NMTSwyP5fE
      uiNwoLt1hh4aJtrioZzPoOo6kwmDL788zXLm9smpKgqH+zW+dL9GWF9D0TyoGR393RTqnQum
      ogjRe0urEM0UCqKL5+SE8Nc73TwQhKPHttgkz+US3fo6OsV/VldFEdMKOTiqbVOfSNDd1s7g
      th2sMc67iZexK+S4W1jM2YvUN/Uy2HsEtz/E/IVTlCs1VAZsxUSJ6bQ+ch/+jiYWvvcW5UTl
      kGM5VyKbtYh8+kHUnh7xQqqU0lMs0JZM9K5j6J0PMnbpOW5c/lZFW8sqs7hymVDfkwQHPoVp
      lMh/97chvzk0qGARKU2zLZrn3s/8Ij2dTYxm2FTufB2ZoklH1MOB9iAJ6xInV76DxeaIkoXF
      cmmBkaZdfHrwc4zU95A4+X9jVimxWC6msK0yux/5PZo6DuFJv4BqJSuOwjaTmNoCrpGfROkd
      5IenT/PyiRMVm/uZtsXE8iy99x+k/9GjTE8uM3H2RsWAkmVaLI8v0zjUmJUTLAAAIABJREFU
      T+uuHayYfv7935wjka2wgwDTqxbTmTiPPvAMLrsd7ZWLKNU6UKZv+sADD4l0jvWe1hVfRglu
      jP8IXSJzWZEe4bSBLC+T62zmG9Nfrej8GzGfm2UouoPEpbMUErVLIRqFHLrHS+L5C+TGHAq0
      rmXRA178XoTssxZsG1aWSUaLXDj+f1ArVGvbJmvLF+kY/CyF7/wWdqo20WOtjqI07eLV1WjF
      Y85GzKdLtEQsfjDz/1GswYgCTGcmGIzuYPrdP2VpskZfYxC5QJZBSF/BSL1b09Y20mCXWck2
      8Ddf+ypWDRbXtm1Gr11le/8Ozn3zJFatsK5ts3R9ju7Dg/yHb77N+FxtPmF+NUMs5KP/xsWb
      x+wayKTFfaBchlMna9va9o8wAa5fE4VznWAYXOIGoy7n2p6GXabOXY95VY40MYoF0i+PSdEJ
      5XSeupCJUqvJ8jqKRSZWXiSZdWaey8U1Yv5mtHPfQGYg6XyJs/6jzmMA5gvXWSw7SwxtbDy2
      QvrsX2OUnImsfOoGLTEXtukcQ7dKq5y+5ue6RIHkcrmMsVDETjlzD5Zhkve6+eaZyaoNtTei
      lEjykLW8+T5XCUZZ7Ab/f3tvGiTXlZ5nPuduuVZmZVXWvqI2oBbsIEBw39BNdouU1FZbI8qy
      LXscmhn/mBg75ofDMROKmYiJkcMxUtthyxMTipE7ZGu8qLulbkqt3rg2F7AJgACJvbBUAah9
      yco98y7z41QRtWTmPckmQTTFtwMBBPvDxa17zzn3nO/93vfzc4zmXrVJzaixnAC3lq6oM8/z
      S8rkVHFmCVbV7zm7eEU5dnXyh/5U/DrW0inlPpGLqm1BgYX0TfJpNWmmXUpTyKjFem6R2zc+
      VL6P2Vv+5Q4buH51lmxBjSBbXklTKCiSobk8zKq1a/34E0DRAxTAcNWZPa2O66KQY9+COq6t
      oR4rdHXJp66o2wV2JAtqwVBUjoE8aKt21wSB0NTb0Wp1GPf6iZ42Qxd1DFZNUx4bH38CxNVb
      jiba1Lp2Aww0TyB0tQce6exQ8gAFiAx2QkL9niN96qayLaNfA8VJEGsfVp63u+LqjGhbbJCG
      5p3el5VghVsJxAaVYoURYWhUQYmFdHXuH1W7LsDYeA/xiJruOdmRJBBRY6mJRJS7mH78CbCe
      R/VFLMbwyNOEDX8n4biVoLdhgESv2oSJdw/Q9NCEUmzjA3sQQyPSKs8PbW10HflNDAWReWPb
      fhr6HsXof8T/ukKj8eDX6Gn0f+kBQ/Bg1yDJoD9DHNRDjCWP0Dn4nP89AH0Tv4XZpGjym3yS
      0Ym9hBUMkpMtrTz8wtNYEf9xEWluYOTALo6O+hvsCgHPPTah3pp3zygMqemY658AuRzcuS1P
      43t9dKWaDiN7CKymecY6hlFjW6F5Bn3uI1y+mWbBbMWM1l6tw81tGFaA8P5OrPbabHJksBMj
      FiazlKM87FMbEwjA0DDRQoiRgRdrhhpWjK7hF1ieO0Nh/HlEtMZgFYLS6HOsOjkGtAsERPWq
      UoFHb3KNlD3DROJgTWG8hsaDsYMU5y/Q0Dzi+xVIhEdpcUZx59oQTm2WWgvtxk7vxljMcuLY
      41t8ULcjYFh86YHHYGmNkUO70GpUDhgBk9FnxsmvLvD1BzroS9Ze2R8a0tkVu8VSF5QiPruD
      /l1SNlkqwsAgNdnkUKgOIqxQkEzw7Wn5Z5D/kOPcVY9tx0cGph6epnEtluPl7mVSAeej+/Jc
      mJ+Kc+tCC/l0ANf10DVBMmLw1b4yI41UrDoUmoa38W86AueDNN5SuWIiRhj6R7Z+eiRIY8im
      pVXDqCQs1bSPfhZP15kuv89V9yRFdmZMhGZI/a/noukWEWGxK5sl5vCRJtdD+qTeCGgsWCbO
      OhPrhneR6vrHlKPjIIz1WA+XNDnjLcr6dVzPQaz/z62QQrbKZdqmz9OUWqZclAy2plsVtbjC
      EcTn43Rc70MrrEsiG0yCx8GaMLe0OPY8ndxUgtT7g9jpdbNhTXDbzXDSnSG/7WwSx+Ko3kGL
      CMmkhKZREoIlzSS3eTsrIBDWaB8yCcc13HXyNO9qvDfj8sMpQWHTpU1RYl/sJEea30W4csGw
      9Aba3V2M6A9isulLKtYbkljW3fG56V1ufRhClnM88qjiBEinZc6/gqIGkNuKffvverFMXpXO
      0hVQFi7Tg3FWx/rxXI/vvz7HyffyVJupzx9s5+vH+7CLeexSgZUbl6tniTIuya5xvKKLkymw
      9MZZvCr5aCseYtevPIApXPkV++BsVXF/2Suw1GuSbwshNJMb5/6kZsZlbPAFOtoOQiHFwupV
      Lk6+RKmiihtIPk7/g/8rrhbmSvokk7nXQVQuo24JtjHRdAjP8zDya8y+8n/gFipntjQ9wMD+
      30bTLcycTuGPvkswV3lrorcHSPzD59FbggiridnvXmXtbOV0qo1LdqQZb3c7hmFQeuMi8fkS
      eoXthgfou/sIjO9C6BqCPMXly1CFD1oqm+TaJkgVXYKly+Su/EsajMr3EbO6eODw72K5AVmG
      c+5s7czk4JDUB1sBWeHc3gFCKGyBPE8a5lYb/CDzrpNXZQOCj2qCKsP0NAYmMxzKtlOc7+a9
      00VqfaZeOjPH+VWDxt4hsgsztVOkUY18IEXT8THSl6aqDn6AUirP7Xdu4I2NS9KkyuAHMEWQ
      9jsW/V2/hOsUyadrp/ou3vhr8u2j2CMnuDjzVvXBD7D4Kt71P6IptsL1wmtVBz/AYmEeU7M4
      kDhE5md/XHXwg2yQt3jrTXaN/xbWX12vOvgBnNkia//pNFbLl8lcaqg6+AEMNBonUxzs28Nu
      s5mmhXLFwQ/yrXpXp2lvj9N3eBA7fZ1qgx+g2SwzHlrhV473Epr9RtXBD7BWus35hW/h7dsv
      8/1+afnbt6C3X+qCOzo/2p34E2Hzc3D6vdoXB1l/0dwM596vrR/+KL7IN04vsbjmZ4wKqWyR
      Q22CtVvXfC9bzqbx5susnVKUT+7pwTxzsqrL9d0b8XDsPO9f/UOccm0CyfMcPNclm7rJ4i0f
      5hlIL18i1bmb23n/3PxSYYHeIlw/+8e+sYXsHOHlEPZP/N+fs7yCNTDI3GsXtrg7VITnYa/l
      yF65hZ1WiM0UoEWQmfP/+Uq5DKnVd1m49apvbH7tNm1dDxN454x/ozzbll/6beXe/l+AlRVl
      YoqrV5Qldfk7M8zMqhmjnr+xwPyMGrEBsHRWnbhZe/e82oQFytc+pJhV62A4e/1HpJcU2ssC
      jlPi8g016WKqtMLUpLrMceG1bynHpk+eoTin5p+auTRNYUbt/ZXmV1ibVpREOjYzV3+iFOvY
      ebLnf1rZw6oSVpY+hiSyDjaSXFa5ZWW67KHAgAPguB7lgroRrldQlyJ6iq0+AQquunGvaxco
      FdQGCAjKqqomIFNUvS6UNfXn5iwvqy92nqfeXrZk49Rq1L0NGurEYjGjrhWnUPh0JZG0timz
      rc3RAJah9tJj4QCROu7DTKh1LwQwexQarK0jElGX9YUaOghFFTsjAlFdkeQB2hKKHqdAKKhO
      pll9PcrEomaZaEG1gaoFLQLN6ga7ekB9AoTbdqu3So18nC6RqoNaaLLbYpvaA9d7ehgfUesy
      eGC4ndbuHqVYoRu0Hj+iFKtZBg0HRmS3QQUYw3uJJdUkkR2Dz9HU+YBSbCDczP4hf29RgO5I
      Px27nkHT1AZJ1y/9jrJTcuzx44R61PTUjUdGCPeqyTgjg53EFSWRuhWgd+/XUNFem8FGGsYe
      k2IYFWw6/G5A7QswOu5/8YFBOfgPHfF/4KEQHDjEf/P0BOFg7dh4JMBvPD1BpLmNaJu/XrV5
      cIz46CCxff6UfPLJg5jJRjh02F9YnUigTexn+Mg/9jWgjTYO0DfxG3QNP08s6ScDNNjz4P/M
      rtgeYmZtQs/UTB5uf5pYcozuPb9a+36BntGvk9j/ONGnn/aNjTz1JGZPD+3PH/fVXuuRIC3P
      HKHt+eMIyz+29cQRom3dhJP+i2Pz4BidI8+R7HnYN3Zg/28TjLbB0QcV3l+TVC5uvz+lcui2
      dshmpQCmErq6ZQr09m3IZiTJMDdbeY8YCMLYOGSzNObTDHY38/bkInaFqs54JMDfe3Y/8ytZ
      LkwvkdFjxEQBr1R5P9nQ1o8V6CS/nCXQ1Yq9vIq9XSUGICBxZDdtB3vQ7tyW4oh4XHa+qQCn
      oYGpffu5WiywpjXSGGsnPfMOlVi3UEM3Aw//LjfyBjOZLJG2BygtnsIuVjLY1ejY+49IJ46z
      mC3QEuxgqXybcoWCOQ3Bsy0P0e2s4uauk2jfTz67SjZ1o8J1Be1djzPR9SLawhKB9jbsbJZy
      lUSCtXcfxtEnyE/N4+RLRIY6yV2frdgTTA8HafnlxyjZUC65BFsbKUzNVe4fFgpQfOYoZ1by
      XLm1TKKtE9PO4hQqnysD3d0sJB1m8rewksN4azOUspX2+IK+wa8x1HgCsbAgDRAaE3LMVUIs
      Bie+XPFLUZ8k8uYNqabKZiWFGwrLTnzz8zt5gmBQFiVpukyRBoOAkHHbvIbm9BDfKSW4aluk
      c0Vi4QBdLTHWskVOX5nB2TQ5gqbGiaEwzwwFcctFhNDQdIvyWphSSt/iJi0EGIUMRjaNk80j
      NA0jFqa5N0Y0dQex3ZgrGJI/j+dCqQzBIJctkx+ZGqlth/tmb5mR4kms0jzlUgYrmCCQPMDV
      wCEmU1snaEhz6CucpqM8SSm/jG6GcAOtXAse4Q5btxxBy6M1uYZmpsnbOQJ6kCavxN7iFDF7
      6zMWgTZWSklmb1+gmJPcSzDQRHehn/Zs2xYHZU/XyWXyZBeXcDIZ8EA0NJC3G8jmrS1zWeqr
      exGmSWlxFSdXxIiGcAIhnFgCx9u6jdBdG6uYxktncHJF9GiISyWP7+bgzjb11nB3E791uJGE
      l8YuFhCahmNpvG9d44a+tWw+oAXoXVqgZS1FOb+MpluEzCb6cgMkc9vOFKa1buq7zumUy3Kn
      0dMDe8YkQ1wB9U0AkKu6Y8sHtjAPP/lRdfMs04QvPyc79S0uwss/rm67Z5o4J56lEG8CAf/i
      T9/kzJXqqc8XHhrh735pAuHB7beukZmp3j+qabiN1olOhCbQbl6v3QmzoQFOPIsXDnN+aYGX
      Ln6AUyU2Hgzx6/sPELN0ylj8yXvvsFRFxqkJwZNDuznYlqTkafzHM6dYrOKMF9ANXpjYR08i
      jlacozD5B1Xs3AEtSKj/HyHCw+B66D99C1Grf9vgEO4DshDu9rfeIHW6eofN+MFhur7+hOQ0
      lrLcenOyKrlohEx6Hx3BCpucubnI7/3pmxTLlcu5E9Eg/8vff5z+1iglt8R3pv4jd3LTFWMF
      GkdbHuHB5gcRjof+k5dhrkrmRwjZG+DQEVmiY5q+B+T6i+GEuFtR+fqrtZ3jymV44zVwXHj9
      tdqek+Uy+k9fI6x7/MVPL9cc/ADffesy716eY+XqQs3BD7B8ZY7MXBqtkIN33qqdqk2n4e03
      SdllfnD5QtXBD5Aq5Pnry5fQjAg/unyx6uAH2QDw5auXWC55vDw5WXXwAxQdm7+68CGu7VCc
      +mb1wQ/gFihMfRNNuBhXr9ce/ACTV9FuTbNyerLm4AdInb7C6qnLeAjunLxek1m382XuvHud
      tO3xr7/9btXBD7CSKfCN//I2QjN4c+GVqoMfwMPl5MLrzJQW0M9+UH3wg1ycz52VWyHLUsoO
      fXxJ5LVJSXz5oVCAfK76/mwzikXcZCu/99I5SgokQaFkM7BWxHP8P2JO2SGemUHcUVAspdO8
      a5lcq+BIsR2pQp6ueCNvXL9aUTC+GdIUuMTVxXnf2JLjEHVnaM6/4X+/bhFNj6N/MKfE27jL
      K8xeWcFO+Usiiwsp9J5O1qb8uQe7WOb07ApvXfXPza/livR2RrhQfLXimWfHfeTX2HMh7c/Y
      g1xoB9VK6u+JJJLJ2ivNlsteukqmmup/Gy5NzmMr+m9mZ1O165m2YUmRuQQ4c+cWtiIBeGVh
      jrKiX2dm6bTyPTir16sWIG6Hu5qiqGg2bKdzpCYVySYPziua/HoevH/rMllbjYhMLd/CziuS
      lpmMMjv88SdAHWan9SBXUJcMWvVKIuu456IquQIU6jCrrfPApR7q02x6M4SoQ03qebh1PLd6
      3omqHhjAES5OraLCLcG2ckXCx58ADeotSuuRT7btUvOmBIjEw8osoNUQhJj6PTdG1NnkQRVv
      ynX42UZuhhZUZ6lFpENm3VRgGIgGtZ9PGDrRHvX2spG4OqM91NaBpUjohawolqHYNvZjt0mt
      B339aq68gQA8/IhMh/rBsjD6+zk+rjYJHj/YR7xXjWKP9zdLplplwkSi7Nm7H00hNhYIsr+z
      m45YbRJrAw/1D9KlsCDoQjA68KSvZykAQsdsO76j+UM1aKN7aBjfpRQbPzBErLcZobCy6wGD
      p58awzL933U0ZPHUxATtYbV3vbvnYUSLGvPMwKDywvjzfQHGFfS4Bw5KIk2ldeX+g4hYjF9/
      aoKID0M81JXguWPDtIx3oVu1H3gwEaZpuB3R3iEnbi1oGhx7kO6mJLtbazOXuhA8PTxKyLR4
      fMDfsnw42cpoWwePDQz7Ev0Hu3pJxjsJdPwqfmUBZvNjaMEu+ayjPit7OIyY2EfL04cwm2vX
      VxmxMMknDhBqitA04j/4Wsa7GO5v4ZeO+z+Lrz8xRjwS5PGOZwlotTXEUgh0EI4eq5rP/wiN
      jZKUVUT9PMBmeB68+w5cOC/zrluuLOSKFIvJA4llSaZ1bk4amm6P7e6RbOx67GWtgd/7weWK
      eoGR9gj/7eO9xPUSINBEhKULKdzyzoFimoJYo4GbSgOCyK52IrcvYSzO7WCqy0Iw1d7BxUIR
      27aJxBq4bmgs4e1o4al7HsNWCGt5FbtcJhqLYXa2c2p5kby9c2/bInR6bI9CKoXQNPTWFs4X
      s9jbVipdCDpijfQmEuTLNqauMcA5GjMvo7PtusLADB0kqD0hGVGQKeprVytmg2zdItMzSm5F
      PlPNMlk9dQV7bWc2yErGaPnVo5S9LK5jo+kWuXnI3tnZAUho0Ny8SNy6AOU8thnjP91o46VL
      3g7SLGDq/PrRPr7WH0akVvGEYCpW5Af2O6xV0El3e0l+SXuQSLp0V/Z49Url9HtTs1xoF+bl
      u21ogJ4+OSmq4OebACD/oYUFmelJr93VZc7PS5u6HaakEejoki1XQW6RFuYhndlqLiUEq01t
      vBzt49piluW1PG2JCL2BDAPaEpbY5g6tBQhG+tH1GOV8CSsSoDQ1Q+7MRbzi1odlNkboPD5M
      Q8iReX/TZMm2+fapU1yb31rvrxsGzYMDjDz2GKliHks3EIUCk6+9wcqdO1t+PtM06R8bY+CR
      h1nO58iXy8QCAW6feZ/bZ89hb3tpoUSC0WeeQm9ooGjbNASC3FhZJF0obplwAuiP2JxoXSFE
      Cs+10QItmMvN6OcXEfltg1LXobNLPttMBi8aJXUrxdz5ecrbMmzC1IkMdWNEgpRX0piNUcy2
      ODl9kWJua6ZPaBqG1UIw0oOdcxC6wNSyBC7/PmZqW8ZKM7kSeYh3G/82M2kPQ9foTDbwhJZi
      YHFqh8t4JmpwYTzOfNQhY6dJWE303MgwdKOIWd52oLUsWdim63Kix2KS9b1+bacexTDlpNh/
      oGJR588/AbajVILv/2XtlFxrK3zpOTlZvv+XtTv8JVvg2efwTIuVm1eYP19D3SQ0uo88RiTZ
      zspbH3LnW69Xr1nXBH2//RUaxvpIra7y777x+6RqOMftO3iIX/uNF8nlcvzf/+oPWKlWFwVM
      7D/A13/z72AYBi9959u8+Vp1dVM4EuEf/Pf/A8m2dv7s3CluLC9VjW2JNvCbh44SMi1p/Pp6
      DdWUpsETT0FfP6unr3DrP9RolKdr9Lz4DLH9gzilIjff+iHlXPWUY6Slg+7Dj0ExRfb/+zt4
      q9VTxnrfQ4R++d8gdBPee1d2dKwGw4CvPA/JJJx6D86cqh373Fdl3dnyMnz/pbti+EoYHYMH
      H9pxNvj4RFg1vH9GkmS1kM3K2o35eZj0IdNyOTAM7MY4t0+94WNB6FFILROJtjD9739QuUDr
      bij5W/PED43wvT//Njev15Zbzs3O0N7Zyck3f8p1H15jfm6WtvYO8vkc3/vWn1FrjSmXyyzM
      z9MyMswb12tfN1cq4XoeA8GwLCuplev2PLh9m3LvANN/8kPcYo2Uo+eRuXKL5KN7Wbhyjtxi
      bdKynMtghiKIc9/EufF6zVgvNY2ItqGbHfDaKzVjcV1ZMtPSCq+/UltwsxE7slte188HdGlJ
      nkW3ZS8/+Qnw8k/USIhCAe7c2nl2qIR8gRULcsv+ckSnXKRwcZ6iAnPp5IrQFuO7P3qp5iDd
      QHptjcsXLijFlopFFhcWuHPbXwe7trpKJhEnrUCQzaXXeNgT/osMgOOwdmOR1PXqX5UNeLaD
      1hAgnb6FW+EMsx3l1RlC178FRX+23MvMYmmjtcsYNpDPyaYlaYUOm/m8FLlcvKCgTlu37unf
      mv36+FmgSsjlZDWeClaWlfrRArC6QnlVXQaYvaWuH75z+gKuImly8/o1XEUW98a1SVZW1O7Z
      dV2mZ9UYVMd1SdfBUpenazct34zcrVnsKqXK22Fnl3Ey/hMLwCuk8KbUzYZVjW0BuHF9Z1Kl
      GjKZj6EJrguf7HFiy5XruXQdwZ/0EWjLdeu5j3qv/Sng07ouHnW+wHquXe9169UE14NQWM17
      EyCRkCZFKmhsxGpU15SGu9V1sJ0HRmva+G1Gb3+/cmz/wAAJRamlpmn0qEpJNY2GHkWPTMDs
      rkPz3N2OEQwpxRqRBHpE7Z2IYBx61DqCArKflyr6d6m3SY1GdzQL/GQngBDqJET/AIyp6Wvp
      30Wsd1DJNdoMR2l/8riSuNtsaiA5Mcj4Pp+Okut48JFH2XtAraXqwQeOcvCBB2r6aW6gu7eP
      Ryb2KV13f2cPortHzZjYsoh++TH0qP+g1kIWTUfGibSoCfkbhw9j7HpMKdac+BpiSHECNDdL
      iaMKk5tokq1PWxUmzMduk1ovJvb6i8ybmqR6p7sXGmqzkW6ymVx/M+XyMtH2ZmptFoSm0Tww
      ih4xSTw6XrvLpqnT/OwxivkyDx17lEi4NoM6PraPXd2DHD/6CNFI7fKEvfsOMNg7RFuinfHR
      2gM7Go3yK8//Cn3BKAPx2itqQrc4HG2mmLexJw7WHCQegtLIBK4nSD6+v3b1myZIPnMAxyuS
      6B3G9HkW4VgD8eY4gcN/Fy1eu5RBT05g9j4j05YTe2sPbE2T+nMrIB3casEw4NiD8veHHvbv
      ZT00XLEH8ifPA4A8yb/84+qHGdO8W9e9+c+b4OExr01xPXiZ1cxVPNdGNyM0BPcRb3iooiuC
      0DS5JfRchG7gXM/iXsuxvc+EIwRrjXGyhklx3dmsZNpcXLtM3tvJRrYZLeyK9uOV5AGqvB6b
      qxDbGe5gqHGQYkp60OgBg2vp68zZ8zumblMkxq8dfZqumFwwcjr8pLzExQrXbVwtcPT8KoFV
      +f+ZjVFiYZfWeBl92zLmOB6zC7C65uGVHYShS4PiSoIWQ6CPRNC6gniuI8muYJhyPlcx5dyg
      r9EeWkF35GHZdWwK19/CyezkfQxjkGD8Kwh7/QajUckTVRNRGcZds+XNf96OcAQeeVQO6I0J
      tbgAr7wMa9vEUUJISeTRY/eICNuA68oJsDh/13fzyuXaac+JvWDbeJEwl6f+K9dmXqLSiq9r
      EXoGf4umtgcRmkZm/jalzE7TKs/zoOQRtBsJWo0IQydXKHP5wm2K+QpdCT2PjJmj9YEeCsUC
      WhEyHy4T9AKIbSuX53mkjRxtD/RQKOaJNyZIn1vEXihWjC14RSKjjXgRjXAoTDLrsbupC13T
      tsS7nsecZnOnNURKuIQ9gf3dd2mez6JV8hiIh+l9YoRAUAMESx9MM39xvupjDvW0Eh7oQAhB
      LrdAMZgBQ+y4Z5CEVyiRxC7kMUWJ8OyrBEVhxyLueS5Ofg0nPoBXTEtxzuVVNL2tcieaaFT2
      aS6XQDfg+mRNb1a6umWZjGnK3/t2Va72dByYmoLVZZlmj8Wga73EpsqX55PfAn10ZQ06O2Hf
      AcnApdP+Of/UKhx/mJnILNfn/ppq2x3HzTJ945uE22ME402Uq8gLhRCIgEYpliPx5BhNTxzg
      5u2VioN/I77BjtCpt/Psc88TWQ4QIlhxcAghiDkROrQ2nv9bv0aH2YazWKoaG9KCmLfh2a88
      z5MTDzDe0ouh6zviNSHo8EyOFAJ8aXiU/lN3aJmrPPgBiqkct8/O4R44TKapm5kLCzUfc2F2
      mdhYP7GHhyjFCghTq3jPALmleUKNSdrHD9OcP0dI2zn45c+nYYQbCTT1EHzyn2Ol+9CNjupt
      mDIZWbLw4ENycNYa/CBX97FxOPyAbHxRrdRZ12HXLjh4WHaPH98r64BqbLs+eSKsEmZnJLXt
      h7U1vM4Ozrz9v1HK184xe24Zu5zFWQnilGpQ4DIYt1xi5U6JKQXT3JWpBcyQxe33ffS1wMr0
      Ip3jfZz73knsUm0C0CnZ6AgSxbLUSddCsUwpX2DmL9/2vYfyaoZgV5KlV9+nvORj3+i6lFMZ
      ioE1yjkfssnzsPM54oEC3PK/D3KLkAvBZf/nxlpK1iu9/WZtXTnIhdP1lMu968Gn9wXYjFq1
      PttgT14gu+rvAg2wcPN1imk1aWZm/g7LU2qSQYArr5xTjr329kUKfi7J61j4cAp8JsoGUu9c
      VL6H9Ic3yN1UI5CyN2fILaq9k0J6FXde0WzYc+CywkIHcou8YbGjgqVFZZVXPbg3E8DvE7cJ
      hRWF3sMbcNW7F7qOTT6lfh9+q/lmpOfV9dFGHZLBmvU721BaXsOr4cSwBY6Lq6i79lwXO1fb
      dWPrX1CXZpJKqRNZxYJ6lUEduDcToA75ZKhZTakEIHT187tmmIS6YLloAAATDElEQVQT6vdh
      htQNWuOdaoQXgPq0Aj2sSBQCVrIRzVIjIYWhoyl2ZxSahqFIeAGgqUs+SSTUSaxAUJ1krQP3
      ZgKoEBUAmoY+PKbc7rN98EsEfXLnG4h19NLUp2b8qpsGe55SI8d002DgwT0EFbWwnQcHQdGB
      OX58TKYwFRDbu4vIiJq8MLKri2irGkMcijehte9DxawWzYBxRRJL02Q3R0UpKS2t6pOlDty7
      CaDi7jwwiGhKMnTodxCi9ou3Qs30T7xIcnjC94HrVoDErt107e0n1p7wvY3hxyfoOTRIvMN/
      cg09OkakuYHB4z7dJ4FoMkbP0RG0bn+RuWiMEBjsIPGgP1seHuwkOtJDy1OHfL8CwtBpPXGE
      poFRNKP2FlJoGs1D45AYgCaF/r+te2Fwf0XCaQd2DUBzEg4e8p8wlgV7FSS1HwP3JgskhHwo
      c3PVDz2tbZKtS68RtdrQG1tZvP1WxVAz0Mi+/f+EhGgn4Hjo4QjZ1cp9yTTTwmkf5WZaMLOa
      o3esh9S1WewqlhwtE32Ud3Uys5oj1JXEnlmiXMWqJTnWiz3Yxe2lNEYyTszQWL1dOXsVTkQZ
      f3YcXS9R1h10zUBkq2Q/IkH0niQUbcKdSYrLa5QWK+/Dgx3NNP/yI6zOpyiWbAKJBkq3FyqS
      XkLXaH3hGHpbCNexMUNRimvLd7ttbgkWtI0doGjfIrM6SSnQQMAuIkpVzlHxQWg8Cqk1aFxP
      bearVJZ2dUvOZ2lRjo1AAJaXKp8HrAA8/SVlC/t68ekRYZVQLsPF83D5EhRL8qtqGPLTVizK
      X54HQuAFgyy32kzm3iC7dhPHKaIbIZoC/QwWx4mUo4j1hLdnmuTCAZYSUUq4eI6D0HUWyxZ/
      dqHAzRX7I6u+UMBgrL2RR+MW9vQCdtlG0zS8gMlZV+NstkymUJYdDjVBc9DkWFinz7GxyzZC
      0yBg8oGrcWZbbFsiwhOdcdpX1yis5XBtFyNgEG02SbQ7CFH6aLBphknUSpAMdSGc9cpRXZfP
      pGzLNOn6m/F0wdrsMiuTt3AKJTzPQw+Y6L3tzKSLrM6ncNYP7bplENEFHRETkcnhlmw0y0CL
      W9Cj44ZlGyIAoetouoERDOOUiniOjdANrEiYdP40M1Pfo1xIAR5C6ITCSUbaDtIWaUNz7HWD
      oSCshWFel/cN8r8Hg3Lldl353oWQ+/jGRskBpFbv8kKmKQVSgYAcA44t/1t7Bxw4VF+Tljpx
      byfABjxvfbC7cPZ9+PCD6rHjEziHD1IurmGlSmgvvywzApUQi+F+6Vkcy+TKbIb/8z/8lFS2
      suagvSnC//4PnyJmaDgCfv9b7/Luxcq180LAf/fCEZ4Y68IV8Aff+RnvnK9usfg7LxzmxMF+
      nGKZYnqe2Q9O4lVhp0KJFroPPoKm6bh3lnFvVE9PivYE9DSD65HLFnnz//0hxUzlZxFujHD0
      xScIRwI4lJl+7xWcKs/NCIbpOvwIRiCEblqcfeWfM1OlD5nQDIYO/Q6D4y8iNB3efKe6858Q
      0qliz6iswlxckCUy1YzEmprgmS/J2FDoU9nzb8e9OQNsx8YKcedO7cEP8OEH6DdvETTiaD/9
      afXBD7C2hvbmG5QcjX/1ZyerDn6A2eUs3/iv76CHLP787atVBz/I+fr/fO8UU6s5vntysubg
      B/ijl04zOZtC02zmzr9XdfAD5FcWmL/8Pl6+hHuzdm7em11BrObAMvnZf3696uAHyK1mOf3t
      N9GiAWbOvV118APYhRyzZ09iWEFunv/TqoMfwHNtrrz3hywvXYAr12vbXnoenDl9t69ErcEP
      Mu7kO9LH/x4MfrhXZ4BqeP0VKWvzw4ZyTMVjNJ3mtTWdH5/3J4XmV7PsG2zjm99/v6abMcga
      nWLZ5o1z0xR8OALXkzYqQ4E1ckv+MsBSJkWj2Qxpf4WclyuwVCxz7c0LvrHFTIFAxKO05m8I
      7JQKWNEoV05/g1LBz0PVo5RZpHM+ftfdoxbyebmtmVLgeDIZWSkcUtMl/Lz4bL4AIOlvFd0n
      SGfpGXVp340z/oNjA99/52rNL8VmvHF2mtUaq+5mvPXBNMWMGoHkuS65Wwqu1QCFMjNnb6jF
      ArMfqrVqBViePkNmRY2Fz86cx1lRZPjTa+oGybYt4+8R1KnUTxrFoqzvUIHnqX0p1pGqgzBc
      XlMb0ICvpflmOK6LU1LUPANaHWuRV4eBsF1yATUuwS7mUBVnOl4Z2yuhC4UhZNso8QgbqONd
      /7z47L4A0YhyS1WCIckaKqIjoW7Qun9IXX7X0lhPK9MoZqgOVjSgvhaFFfiJj2IT6vcQbuzE
      sNRMc02rASugSGJZlvT6UcWnmPXZjs9uAggNutTapNLdLYkTFVgWB584orTehAMmjx/oY7hb
      bUCdODLI7l61fPSj+/uItKixrUYwTHhArQRENEXpGOtFU2GIBQw8fERmaxSQHDhMY6uaNDO5
      +wTCxzv1I3R1KzesIByWUsd7hM9uAoBMkQV8alJCYckWtrWrTYIDBxkZ6eGx/bWF4wL4+pNj
      dDQ38OIzezG2y6q2YaAzwVePD/PiM3sxfRp87+po5LljQ8Q6+gg21p4wQtNoGzuE1twAfvVH
      uobW30a8s4ldx/zLRQaOj5Lo7SbR729W29g3jBWJsefYP0E3a3/pAuEkA/v/ATxwTK0l7r79
      8mCrUs68/8A9OwDDZ8UDbMbsLPz4B5U9giIROfjLZbAdMHR5mFqsxPoK6O+HlhZwPQqawb98
      6w4/u7m8g2DUNcFXDvfx9/e3YqTXQMDL8w5/+OpVihXaLe1KRvinj/bRY7kg4NVFh3/78lUK
      FWL7Whv4p8+O0VdOg+timwa35q5RyO9kwAWC1s5dNGpBhOfhWmGc5TJs98IESp7HVCLGh6kc
      eNCbbMA+e42F81M7GVQhCA92UBjupmi7BE2NAWYRqZkKX0ZBrLGF9ngrmu3gmSZz3iQfvvd/
      USrs9DUKBVs4tP+fEWN9S1MuSWOqSjX9gQBsFvvH49JIuVJCQ9PkRDl4WL3z+yeAz34CgOwt
      fP68JEoKebkCxOKSMZzZakCLpsmJEY/Lw5Kmy1Uok95hsGsLjXdo5GXRzFKmiKFrNMdCfLVV
      Y2LpOmKbg/K0Fua7tHKrrJHJl2hqCHFAz3HCWyDibH3Bt9Zjp9djE9EQB9ojnHDmiC5sNbly
      TZNUMk4mmcAu5NEME8sTJGYXCayubRmUXjCM2zeKF03glcoI0+DySpY/OnWTq0tbyxDaEhFe
      GG6lJZOjsCZ/FhEO8OpCllOr+S05BsvQeGwgwnO7wxjrPbkMwyI+t0h0KYXY/Ix1nWxHlKng
      JGtrVynlVwiEW0gUE/TldmGVtn0BLUt6uHre+vsLS0liJr1zYiSapO1JNit/GTpEYzA6Kr/y
      9xj3xwTYwEYLVseFH/2gdmO9kd3SPsN1ZavWGs5q3vAI5aPHEbqOcfUS4q23qnuMhiM4J57F
      bohhXbuCePvN6kKMcHg9No5pl9C+9+fVtQ9C4B08jDexF1EqIl76XvV0n2HgPfYE9PRx5fYy
      v/vHr1ZtJxQwdf7HXzvGg3u6KNsO/+I/v8V7l6o/i+Pj3fxPXz+KCYjXXkFM1XCZ6+3De/wJ
      XBy06duI116t/iwCAdmMuqkJpqfh1ZcVYpvlaq+aDPkU8NmeAbZDCCmS3mh1WQuXL8GtaTj/
      Yc3BDyCuXMaavomZTSPePVnbYDeXRX/nTQL5jIytpULK5dDffpOALtDefqu28MfzEKffQ1tZ
      QZx8p3au27YRb/6UQjbHv/3Oz2r20iqWHf7dX7xHplTmr352rebgB3jrw1u8fHoK7cql2oMf
      YOom4soV9JIrF41az6JYlP2XiyUpc/SLff01OfA/w8EPnzUTXAmeBz/+kZr8rVRa94ZUjM3l
      fScLIAdyLicrFP2QzcgU39kzauqmXFZOXL9Y2+biYoFvXfC/h2LZIRKyeOPcFCtpf17jzvwq
      X9WWdmwBKyK1KovY/PoPw91tT8Uz2vabLsjnVkf/uE8Dnx0RVg35vLr0TaXn7wZm7sjKU1Xc
      vKEe62f3shm3qjeF3o73L04Dasq0S1OLXLuj1gY2ncqSmc/SoPL9LxalbYkq6nlu95DxrYb7
      awsEn4ru8+616xEk1oE62qTWg3qOZ371SZvhUjHRVO0mPsXn9ildtw7cfxMgWkf71TrYYRob
      62vtWs+1e+uw66jjun1t6tuD/vZGZabaNA0SjYptYDVdTeG1gXqeWz3v41PC/TcBNE22uVTB
      0IhUkalgcFjGqpTZNsSkaZNSbAMMj6jrng8cgnaFdJ+us//EcRIN/ia4pqHx5aNDHBtVY9af
      OjaM8OuWuYGhYUlAqhxWQyF46BG1rWYwqCaT/ZRx/02ADRGFn/txa5s0UFVhDpNJGBmRGtR+
      n5IDXZcMZ7JFOlj7xR45KldJFW1rX7986fsP+U+uPaPEW5r4eyf2ovlYqXz12BBdiTB/+7E9
      dDbVrv1pawzz/LEhmJjwr7mJRmVvrVhcOrP54eBhmcvfq1BOcfCwfxXAPcD9xQNsxvKSzAZV
      Oih1dcMjj93tjL6yDD/+4c4OgRsIBu82UGtplYRbtR/bNNedyNytf08l1grI+6107Y3umRuM
      94b8rxKEkNculUDX+X46wL+f1ci5WyeCKeArzS6/PRhELMls0bQW5l9PwaXCzhV7IODwz/qh
      dd3YtubPJ4TM6a+uSxdNU/IzlbqxmKZcCPaMyr/nODIr9v6ZnRk605QWh6Nj95TxrYb7dwLA
      egbimhRP53Jyu9HRKSfA9s/sR7FLMtWoaTA9VZPEom+XjDUMmR6t5VLW0SkHsGHI8o0qfqSA
      3DIYxrq+1ZHZqmqPeWMrUC7Ln7GCi57nwbwt+LFoYTbeQtnxaGuweGzhMv1ebofzec6Fk8Ug
      l1oGmM87tDZY7J6+wLGITajSh0fXZa2ObcueW8tLMF9DyNPSKhcfTZOM/MCQ/H37TS8vwfXr
      0gZR0+SXZHDwM099bsb9lwbdjEBArir1xjqOZId9SCxcB556Rk4cny6RrK7AC78qB6hf7Mwd
      +OVflaTeX71UO+dfKMitWXc3/MV3KoYIAW2mx4vGMjx6RE7GH/8QyFUssw9r8ESowBPtZXj0
      cSlFXK2RcXEcOUCf+ZKUqV48X/vnS6/B40/W3kIJIX+u5jrKoD8D3H9ngE8CszNy9ffD1Sty
      YJ857U+m5fNw/gM4fco/tlCQRV+TV+X2zA9nTkl+wC+datvSZHhhQZYb+OHqFclR+DG+IO91
      aRHOKHh7FgrSzOBzgPv7C/BxodhxEceRJRWragSStHNRVHlNTqqLQIpFOH3aPw7kF2jyqk+/
      5E149x11U9lLF9VYXID5WXndeyRe/7Twi3331aCqNYbaHe23Q3XwgzSFUnU+BlCVT3qeXKlV
      Uc89r66qM9qlUn3Xvk/x+ZwA4TqkiKrelFBfKYVl1SfsUC0KE6I+yWA99xyNqq/opil/xl9w
      fD4ngOrWQwh5cI4oTpjBYTlIVDAwKDseqsA0YXxCLTYel8Sbagpx3wH12MEhmfpUQaLpM6/k
      /CTw+ZwAPb1qutINg9YxhcEXCMhBqjJQrQDsHpW/VNqZju+Vg09ltd53QJKA7Qp649Y2SUp1
      KjDELa3rnp1qmmD2HVCLu8/x+ZwApglPn6i9Wre03i13mNhbuy2nZcHDj8rVd2xCdh2s9W8/
      /IisPYpEZJq11lZhYFBKARsTUuBTaxKMjsu4lRU48oD8czU0NsKhwzJ2Ym/t3HtjQt6nEHJR
      2Luv+lZI12VqVfXrdp/j/ibCfl6k05KRvHJZehAJ5Asc3ytf8uaB6Tgy7uwZeXhdN+mloxMO
      H5ETZgOuezc2k7kb294hY7fXBS0tyvTp9NTd2FBIrrajY3e3Ep4nOYRT78lsz0ZsMASsm+du
      iG5CIfn1MoythJ+uS5LPcWTqdiNT09AgLX+yma2xI7vlah7eVEjnupLreP+M1ANs3EdLqyxh
      UHXz+AXA53sCbMDz5MDZGBx+KJXk4Glo8D8UbsRGo/57Ys+TJJIV8N8aOY4Ul2i6NA1YrsIn
      RKJSXmhZcpBeuQynflY5Vgg4dESysULIZIHf+aBclmx5tOFzseffjr8ZE+AXFa4Lr/zEX42V
      bIHnvipLNH7017WZZ12XjG89Jc6fY3w+zwCfF6RW1aSIiwuS7T33vr/U0nHk1uYLAF9MgPsb
      NxVKGDYwPVW7gG0zVlc+PZXXLxi+mAD3M+oZpJsPt35wHDVb878B+GIC3M9Q4RA2EG/0tync
      gG7Ux5Z/jvHFBLif0dennnnp36VGeAG0fjotR38R8cVTuJ8RbVCTInZ1S77iwEHZbK4WDEPq
      kr8A8MUEuL8hhNQa13LFTibh8Sfkl6I5CQ89XJ151jQpZKnHq/9zji94gF8EuK5Mh35wTjqq
      uR4ELBjeLZnczXt/z5NlzWfPyNr+ckl+FZJJyfjWY1vyNwBfTIBfNJRKUgxjBfxZXNeRXp2W
      9blkcT8J/P8OfjfVmzQdowAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Full Story' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='HeatMap' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='QuoteTypes' width='192'>
      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
      0ERlAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='TopORG' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TopPER' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
