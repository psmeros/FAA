<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.1130.2000                               -->
<workbook source-build='10.1.13 (10100.17.1130.2000)' source-platform='mac' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='plotTopQuoteesDF_p' inline='true' name='federated.1474e3m0c69jby151lvup13tqyeq' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='plotTopQuoteesDF_p' name='textscan.0g38v0711pw38w1g1iz2q1r4101b'>
            <connection class='textscan' directory='/Users/smeros/workspace/nutritionStudy/Demo/sources' filename='plotTopQuoteesDF_p.tsv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0g38v0711pw38w1g1iz2q1r4101b' name='plotTopQuoteesDF_p.tsv' table='[plotTopQuoteesDF_p#tsv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='quotee' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[plotTopQuoteesDF_p.tsv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quotee</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quotee]</local-name>
            <parent-name>[plotTopQuoteesDF_p.tsv]</parent-name>
            <remote-alias>quotee</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[plotTopQuoteesDF_p.tsv]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[plotTopQuoteesDF_p.tsv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Quotee' datatype='string' name='[quotee]' role='dimension' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.470833' measure-ordering='alphabetic' measure-percentage='0.529167' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='plotNumOfQuotesDF' inline='true' name='federated.01t4x0m16q73la12mooj805oeaj4' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='plotNumOfQuotesDF' name='textscan.1lvllm805vhmz211890wz1jmxknz'>
            <connection class='textscan' directory='/Users/smeros/workspace/nutritionStudy/Demo/sources' filename='plotNumOfQuotesDF.tsv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1lvllm805vhmz211890wz1jmxknz' name='plotNumOfQuotesDF.tsv' table='[plotNumOfQuotesDF#tsv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='string' name='articleTopic' ordinal='0' />
            <column datatype='real' name='persons' ordinal='1' />
            <column datatype='real' name='organizations' ordinal='2' />
            <column datatype='real' name='authority' ordinal='3' />
            <column datatype='real' name='empirical observation' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>articleTopic</remote-name>
            <remote-type>129</remote-type>
            <local-name>[articleTopic]</local-name>
            <parent-name>[plotNumOfQuotesDF.tsv]</parent-name>
            <remote-alias>articleTopic</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>persons</remote-name>
            <remote-type>5</remote-type>
            <local-name>[persons]</local-name>
            <parent-name>[plotNumOfQuotesDF.tsv]</parent-name>
            <remote-alias>persons</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>organizations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[organizations]</local-name>
            <parent-name>[plotNumOfQuotesDF.tsv]</parent-name>
            <remote-alias>organizations</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>authority</remote-name>
            <remote-type>5</remote-type>
            <local-name>[authority]</local-name>
            <parent-name>[plotNumOfQuotesDF.tsv]</parent-name>
            <remote-alias>authority</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>empirical observation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[empirical observation]</local-name>
            <parent-name>[plotNumOfQuotesDF.tsv]</parent-name>
            <remote-alias>empirical observation</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[plotNumOfQuotesDF.tsv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Article Topic' datatype='string' name='[articleTopic]' role='dimension' type='nominal' />
      <column caption='Authority' datatype='real' name='[authority]' role='measure' type='quantitative' />
      <column caption='Empirical Observation' datatype='real' name='[empirical observation]' role='measure' type='quantitative' />
      <column caption='Organizations' datatype='real' name='[organizations]' role='measure' type='quantitative' />
      <column caption='Persons' datatype='real' name='[persons]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.398568' measure-ordering='alphabetic' measure-percentage='0.601432' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='plotTopQuoteesDF_o' inline='true' name='federated.0blxon918wuvlt13amf8d1xt9ka5' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='plotTopQuoteesDF_o' name='textscan.10n7obt11ly97j11qyeq80rbziux'>
            <connection class='textscan' directory='/Users/smeros/workspace/nutritionStudy/Demo/sources' filename='plotTopQuoteesDF_o.tsv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.10n7obt11ly97j11qyeq80rbziux' name='plotTopQuoteesDF_o.tsv' table='[plotTopQuoteesDF_o#tsv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='organization' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[plotTopQuoteesDF_o.tsv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>organization</remote-name>
            <remote-type>129</remote-type>
            <local-name>[organization]</local-name>
            <parent-name>[plotTopQuoteesDF_o.tsv]</parent-name>
            <remote-alias>organization</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[plotTopQuoteesDF_o.tsv]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[plotTopQuoteesDF_o.tsv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Organization' datatype='string' name='[organization]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;ÊAmazon Fresh&quot;' value='Amazon Fresh' />
        </aliases>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.448687' measure-ordering='alphabetic' measure-percentage='0.551313' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='plotHeatMapDF' inline='true' name='federated.08rkxn81vkcbm51c075q30yr41nk' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='plotHeatMapDF' name='textscan.0u8v7151ev83hj1go63fj1qqttz1'>
            <connection class='textscan' directory='/Users/smeros/workspace/nutritionStudy/Demo/sources' filename='plotHeatMapDF.tsv' password='' server='' />
          </named-connection>
          <named-connection caption='plotTopQuoteesDF_o' name='textscan.0dffs6p0aw2g6h150gmrm13q9mah'>
            <connection class='textscan' directory='/Users/smeros/workspace/nutritionStudy/Demo/sources' filename='plotHeatMapDF.tsv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0u8v7151ev83hj1go63fj1qqttz1' name='plotHeatMapDF.tsv' table='[plotHeatMapDF#tsv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='string' name='articleTopic' ordinal='0' />
            <column datatype='real' name='antibiotics' ordinal='1' />
            <column datatype='real' name='beans' ordinal='2' />
            <column datatype='real' name='cheese' ordinal='3' />
            <column datatype='real' name='chicken' ordinal='4' />
            <column datatype='real' name='children' ordinal='5' />
            <column datatype='real' name='chocolate' ordinal='6' />
            <column datatype='real' name='cholesterol' ordinal='7' />
            <column datatype='real' name='coffee' ordinal='8' />
            <column datatype='real' name='cookies' ordinal='9' />
            <column datatype='real' name='dairy' ordinal='10' />
            <column datatype='real' name='dates' ordinal='11' />
            <column datatype='real' name='energy' ordinal='12' />
            <column datatype='real' name='environment' ordinal='13' />
            <column datatype='real' name='fat' ordinal='14' />
            <column datatype='real' name='fish' ordinal='15' />
            <column datatype='real' name='fruit' ordinal='16' />
            <column datatype='real' name='gluten' ordinal='17' />
            <column datatype='real' name='insulin' ordinal='18' />
            <column datatype='real' name='lead' ordinal='19' />
            <column datatype='real' name='meat' ordinal='20' />
            <column datatype='real' name='milk' ordinal='21' />
            <column datatype='real' name='obesity' ordinal='22' />
            <column datatype='real' name='oils' ordinal='23' />
            <column datatype='real' name='pizza' ordinal='24' />
            <column datatype='real' name='recipes' ordinal='25' />
            <column datatype='real' name='restaurants' ordinal='26' />
            <column datatype='real' name='rice' ordinal='27' />
            <column datatype='real' name='salt' ordinal='28' />
            <column datatype='real' name='stress' ordinal='29' />
            <column datatype='real' name='sugar' ordinal='30' />
            <column datatype='real' name='tea' ordinal='31' />
            <column datatype='real' name='water' ordinal='32' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>articleTopic</remote-name>
            <remote-type>129</remote-type>
            <local-name>[articleTopic]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>articleTopic</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>antibiotics</remote-name>
            <remote-type>5</remote-type>
            <local-name>[antibiotics]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>antibiotics</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>beans</remote-name>
            <remote-type>5</remote-type>
            <local-name>[beans]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>beans</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cheese</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cheese]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>cheese</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>chicken</remote-name>
            <remote-type>5</remote-type>
            <local-name>[chicken]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>chicken</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>children</remote-name>
            <remote-type>5</remote-type>
            <local-name>[children]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>children</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>chocolate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[chocolate]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>chocolate</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cholesterol</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cholesterol]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>cholesterol</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coffee</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coffee]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>coffee</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cookies</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cookies]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>cookies</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dairy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dairy]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>dairy</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dates</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dates]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>dates</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>energy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[energy]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>energy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>environment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[environment]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>environment</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fat]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>fat</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fish</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fish]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>fish</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fruit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[fruit]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>fruit</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gluten</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gluten]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>gluten</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>insulin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[insulin]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>insulin</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lead</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lead]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>lead</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>meat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[meat]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>meat</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>milk</remote-name>
            <remote-type>5</remote-type>
            <local-name>[milk]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>milk</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>obesity</remote-name>
            <remote-type>5</remote-type>
            <local-name>[obesity]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>obesity</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oils</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oils]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>oils</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pizza</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pizza]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>pizza</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recipes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[recipes]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>recipes</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>restaurants</remote-name>
            <remote-type>5</remote-type>
            <local-name>[restaurants]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>restaurants</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rice</remote-name>
            <remote-type>5</remote-type>
            <local-name>[rice]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>rice</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[salt]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>salt</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stress</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stress]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>stress</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sugar</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sugar]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>sugar</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tea</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tea]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>tea</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>water</remote-name>
            <remote-type>5</remote-type>
            <local-name>[water]</local-name>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias>water</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[plotHeatMapDF.tsv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Antibiotics' datatype='real' name='[antibiotics]' role='measure' type='quantitative' />
      <column caption='Article Topic' datatype='string' name='[articleTopic]' role='dimension' type='nominal' />
      <column caption='Beans' datatype='real' name='[beans]' role='measure' type='quantitative' />
      <column caption='Cheese' datatype='real' name='[cheese]' role='measure' type='quantitative' />
      <column caption='Chicken' datatype='real' name='[chicken]' role='measure' type='quantitative' />
      <column caption='Children' datatype='real' name='[children]' role='measure' type='quantitative' />
      <column caption='Chocolate' datatype='real' name='[chocolate]' role='measure' type='quantitative' />
      <column caption='Cholesterol' datatype='real' name='[cholesterol]' role='measure' type='quantitative' />
      <column caption='Coffee' datatype='real' name='[coffee]' role='measure' type='quantitative' />
      <column caption='Cookies' datatype='real' name='[cookies]' role='measure' type='quantitative' />
      <column caption='Dairy' datatype='real' name='[dairy]' role='measure' type='quantitative' />
      <column caption='Dates' datatype='real' name='[dates]' role='measure' type='quantitative' />
      <column caption='Energy' datatype='real' name='[energy]' role='measure' type='quantitative' />
      <column caption='Environment' datatype='real' name='[environment]' role='measure' type='quantitative' />
      <column caption='Fat' datatype='real' name='[fat]' role='measure' type='quantitative' />
      <column caption='Fish' datatype='real' name='[fish]' role='measure' type='quantitative' />
      <column caption='Fruit' datatype='real' name='[fruit]' role='measure' type='quantitative' />
      <column caption='Gluten' datatype='real' name='[gluten]' role='measure' type='quantitative' />
      <column caption='Insulin' datatype='real' name='[insulin]' role='measure' type='quantitative' />
      <column caption='Lead' datatype='real' name='[lead]' role='measure' type='quantitative' />
      <column caption='Meat' datatype='real' name='[meat]' role='measure' type='quantitative' />
      <column caption='Milk' datatype='real' name='[milk]' role='measure' type='quantitative' />
      <column caption='Obesity' datatype='real' name='[obesity]' role='measure' type='quantitative' />
      <column caption='Oils' datatype='real' name='[oils]' role='measure' type='quantitative' />
      <column caption='Pizza' datatype='real' name='[pizza]' role='measure' type='quantitative' />
      <column caption='Recipes' datatype='real' name='[recipes]' role='measure' type='quantitative' />
      <column caption='Restaurants' datatype='real' name='[restaurants]' role='measure' type='quantitative' />
      <column caption='Rice' datatype='real' name='[rice]' role='measure' type='quantitative' />
      <column caption='Salt' datatype='real' name='[salt]' role='measure' type='quantitative' />
      <column caption='Stress' datatype='real' name='[stress]' role='measure' type='quantitative' />
      <column caption='Sugar' datatype='real' name='[sugar]' role='measure' type='quantitative' />
      <column caption='Tea' datatype='real' name='[tea]' role='measure' type='quantitative' />
      <column caption='Water' datatype='real' name='[water]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.0583333' measure-ordering='alphabetic' measure-percentage='0.941667' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='articleTopic' />
        <field-sort-custom-order field='antibiotics' />
        <field-sort-custom-order field='beans' />
        <field-sort-custom-order field='cheese' />
        <field-sort-custom-order field='chicken' />
        <field-sort-custom-order field='children' />
        <field-sort-custom-order field='chocolate' />
        <field-sort-custom-order field='cholesterol' />
        <field-sort-custom-order field='coffee' />
        <field-sort-custom-order field='cookies' />
        <field-sort-custom-order field='dairy' />
        <field-sort-custom-order field='dates' />
        <field-sort-custom-order field='energy' />
        <field-sort-custom-order field='environment' />
        <field-sort-custom-order field='fat' />
        <field-sort-custom-order field='fish' />
        <field-sort-custom-order field='fruit' />
        <field-sort-custom-order field='gluten' />
        <field-sort-custom-order field='insulin' />
        <field-sort-custom-order field='lead' />
        <field-sort-custom-order field='meat' />
        <field-sort-custom-order field='milk' />
        <field-sort-custom-order field='obesity' />
        <field-sort-custom-order field='oils' />
        <field-sort-custom-order field='pizza' />
        <field-sort-custom-order field='recipes' />
        <field-sort-custom-order field='restaurants' />
        <field-sort-custom-order field='rice' />
        <field-sort-custom-order field='salt' />
        <field-sort-custom-order field='stress' />
        <field-sort-custom-order field='sugar' />
        <field-sort-custom-order field='tea' />
        <field-sort-custom-order field='water' />
      </field-sort-info>
    </datasource>
    <datasource caption='plotQuotesAndTopicsDF' inline='true' name='federated.0in6t7u08uo9vn15vfcue18vmizb' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='plotQuotesAndTopicsDF' name='textscan.1o2y4mq1u2ko9i1ej1skp0tx17n5'>
            <connection class='textscan' directory='/Users/smeros/workspace/nutritionStudy/Demo/sources' filename='plotQuotesAndTopicsDF.tsv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1o2y4mq1u2ko9i1ej1skp0tx17n5' name='plotQuotesAndTopicsDF.tsv' table='[plotQuotesAndTopicsDF#tsv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='quote' ordinal='1' />
            <column datatype='string' name='quotee' ordinal='2' />
            <column datatype='string' name='quoteeAffiliation' ordinal='3' />
            <column datatype='string' name='quoteeType' ordinal='4' />
            <column datatype='string' name='articleTopic' ordinal='5' />
            <column datatype='real' name='articleSim' ordinal='6' />
            <column datatype='string' name='quoteTopic' ordinal='7' />
            <column datatype='real' name='quoteSim' ordinal='8' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quote</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quote]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>quote</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quotee</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quotee]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>quotee</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quoteeAffiliation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quoteeAffiliation]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>quoteeAffiliation</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quoteeType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quoteeType]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>quoteeType</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>articleTopic</remote-name>
            <remote-type>129</remote-type>
            <local-name>[articleTopic]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>articleTopic</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>articleSim</remote-name>
            <remote-type>5</remote-type>
            <local-name>[articleSim]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>articleSim</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quoteTopic</remote-name>
            <remote-type>129</remote-type>
            <local-name>[quoteTopic]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>quoteTopic</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>quoteSim</remote-name>
            <remote-type>5</remote-type>
            <local-name>[quoteSim]</local-name>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias>quoteSim</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[plotQuotesAndTopicsDF.tsv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Article Sim' datatype='real' name='[articleSim]' role='measure' type='quantitative' />
      <column caption='Article Topic' datatype='string' name='[articleTopic]' role='dimension' type='nominal' />
      <column caption='Quote Sim' datatype='real' name='[quoteSim]' role='measure' type='quantitative' />
      <column caption='Quote Topic' datatype='string' name='[quoteTopic]' role='dimension' type='nominal' />
      <column caption='Quote' datatype='string' name='[quote]' role='dimension' type='nominal' />
      <column caption='Quotee Affiliation' datatype='string' name='[quoteeAffiliation]' role='dimension' type='nominal' />
      <column caption='Quotee Type' datatype='string' name='[quoteeType]' role='dimension' type='nominal' />
      <column caption='Quotee' datatype='string' name='[quotee]' role='dimension' type='nominal' />
      <column-instance column='[articleTopic]' derivation='None' name='[none:articleTopic:nk]' pivot='key' type='nominal' />
      <column-instance column='[quoteTopic]' derivation='None' name='[none:quoteTopic:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.551313' measure-ordering='alphabetic' measure-percentage='0.448687' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:articleTopic:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;cookies&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;stress&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;antibiotics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;milk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;children&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;recipes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;environment&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dairy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sugar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;chocolate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;restaurants&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;lead&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;beans&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;obesity&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;gluten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;cholesterol&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rice&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;fat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;fish&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;insulin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;meat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;dates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;tea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;coffee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;salt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;cheese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;oils&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;fruit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;energy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;water&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;chicken&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pizza&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:quoteTopic:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;cookies&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;fast food&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;stress&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;antibiotics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;butter&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;milk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;children&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;recipes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;vision&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;environment&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;hunger&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;dairy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sugar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;chocolate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;restaurants&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;lead&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;beans&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;cancer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;obesity&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;gluten&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;cholesterol&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;diabetes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;rice&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;fat&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;liver&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;fish&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;insulin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;potatoes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;meat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;dates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;tea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;coffee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;salt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;cheese&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;oils&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;fruit&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;energy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;water&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;chicken&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;pizza&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Bubbles'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Quotes per Topic</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='plotQuotesAndTopicsDF' name='federated.0in6t7u08uo9vn15vfcue18vmizb' />
          </datasources>
          <datasource-dependencies datasource='federated.0in6t7u08uo9vn15vfcue18vmizb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Article Sim' datatype='real' name='[articleSim]' role='measure' type='quantitative' />
            <column-instance column='[articleSim]' derivation='Attribute' name='[attr:articleSim:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quoteSim]' derivation='Attribute' name='[attr:quoteSim:qk]' pivot='key' type='quantitative' />
            <column-instance column='[quote]' derivation='None' name='[none:quote:nk]' pivot='key' type='nominal' />
            <column-instance column='[quoteTopic]' derivation='None' name='[none:quoteTopic:nk]' pivot='key' type='nominal' />
            <column caption='Quote Sim' datatype='real' name='[quoteSim]' role='measure' type='quantitative' />
            <column caption='Quote Topic' datatype='string' name='[quoteTopic]' role='dimension' type='nominal' />
            <column caption='Quote' datatype='string' name='[quote]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0in6t7u08uo9vn15vfcue18vmizb].[attr:articleSim:qk]' included-values='in-range'>
            <min>0.90000000000000002</min>
            <max>0.96274038500000003</max>
          </filter>
          <filter class='quantitative' column='[federated.0in6t7u08uo9vn15vfcue18vmizb].[attr:quoteSim:qk]' included-values='in-range'>
            <min>0.75</min>
            <max>0.93541666700000003</max>
          </filter>
          <slices>
            <column>[federated.0in6t7u08uo9vn15vfcue18vmizb].[attr:articleSim:qk]</column>
            <column>[federated.0in6t7u08uo9vn15vfcue18vmizb].[attr:quoteSim:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0in6t7u08uo9vn15vfcue18vmizb].[sum:Number of Records:qk]' />
              <color column='[federated.0in6t7u08uo9vn15vfcue18vmizb].[none:quoteTopic:nk]' />
              <text column='[federated.0in6t7u08uo9vn15vfcue18vmizb].[none:quote:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='HeatMap'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Topics of Articles vs Topics of Quotes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='plotHeatMapDF' name='federated.08rkxn81vkcbm51c075q30yr41nk' />
          </datasources>
          <datasource-dependencies datasource='federated.08rkxn81vkcbm51c075q30yr41nk'>
            <column caption='Antibiotics' datatype='real' name='[antibiotics]' role='measure' type='quantitative' />
            <column caption='Article Topic' datatype='string' name='[articleTopic]' role='dimension' type='nominal' />
            <column-instance column='[antibiotics]' derivation='Attribute' name='[attr:antibiotics:qk]' pivot='key' type='quantitative' />
            <column-instance column='[beans]' derivation='Attribute' name='[attr:beans:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cheese]' derivation='Attribute' name='[attr:cheese:qk]' pivot='key' type='quantitative' />
            <column-instance column='[chicken]' derivation='Attribute' name='[attr:chicken:qk]' pivot='key' type='quantitative' />
            <column-instance column='[children]' derivation='Attribute' name='[attr:children:qk]' pivot='key' type='quantitative' />
            <column-instance column='[chocolate]' derivation='Attribute' name='[attr:chocolate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cholesterol]' derivation='Attribute' name='[attr:cholesterol:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coffee]' derivation='Attribute' name='[attr:coffee:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cookies]' derivation='Attribute' name='[attr:cookies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dairy]' derivation='Attribute' name='[attr:dairy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dates]' derivation='Attribute' name='[attr:dates:qk]' pivot='key' type='quantitative' />
            <column-instance column='[energy]' derivation='Attribute' name='[attr:energy:qk]' pivot='key' type='quantitative' />
            <column-instance column='[environment]' derivation='Attribute' name='[attr:environment:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fat]' derivation='Attribute' name='[attr:fat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fish]' derivation='Attribute' name='[attr:fish:qk]' pivot='key' type='quantitative' />
            <column-instance column='[fruit]' derivation='Attribute' name='[attr:fruit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gluten]' derivation='Attribute' name='[attr:gluten:qk]' pivot='key' type='quantitative' />
            <column-instance column='[insulin]' derivation='Attribute' name='[attr:insulin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lead]' derivation='Attribute' name='[attr:lead:qk]' pivot='key' type='quantitative' />
            <column-instance column='[meat]' derivation='Attribute' name='[attr:meat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[milk]' derivation='Attribute' name='[attr:milk:qk]' pivot='key' type='quantitative' />
            <column-instance column='[obesity]' derivation='Attribute' name='[attr:obesity:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oils]' derivation='Attribute' name='[attr:oils:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pizza]' derivation='Attribute' name='[attr:pizza:qk]' pivot='key' type='quantitative' />
            <column-instance column='[recipes]' derivation='Attribute' name='[attr:recipes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[restaurants]' derivation='Attribute' name='[attr:restaurants:qk]' pivot='key' type='quantitative' />
            <column-instance column='[rice]' derivation='Attribute' name='[attr:rice:qk]' pivot='key' type='quantitative' />
            <column-instance column='[salt]' derivation='Attribute' name='[attr:salt:qk]' pivot='key' type='quantitative' />
            <column-instance column='[stress]' derivation='Attribute' name='[attr:stress:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sugar]' derivation='Attribute' name='[attr:sugar:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tea]' derivation='Attribute' name='[attr:tea:qk]' pivot='key' type='quantitative' />
            <column-instance column='[water]' derivation='Attribute' name='[attr:water:qk]' pivot='key' type='quantitative' />
            <column caption='Beans' datatype='real' name='[beans]' role='measure' type='quantitative' />
            <column caption='Cheese' datatype='real' name='[cheese]' role='measure' type='quantitative' />
            <column caption='Chicken' datatype='real' name='[chicken]' role='measure' type='quantitative' />
            <column caption='Children' datatype='real' name='[children]' role='measure' type='quantitative' />
            <column caption='Chocolate' datatype='real' name='[chocolate]' role='measure' type='quantitative' />
            <column caption='Cholesterol' datatype='real' name='[cholesterol]' role='measure' type='quantitative' />
            <column caption='Coffee' datatype='real' name='[coffee]' role='measure' type='quantitative' />
            <column caption='Cookies' datatype='real' name='[cookies]' role='measure' type='quantitative' />
            <column caption='Dairy' datatype='real' name='[dairy]' role='measure' type='quantitative' />
            <column caption='Dates' datatype='real' name='[dates]' role='measure' type='quantitative' />
            <column caption='Energy' datatype='real' name='[energy]' role='measure' type='quantitative' />
            <column caption='Environment' datatype='real' name='[environment]' role='measure' type='quantitative' />
            <column caption='Fat' datatype='real' name='[fat]' role='measure' type='quantitative' />
            <column caption='Fish' datatype='real' name='[fish]' role='measure' type='quantitative' />
            <column caption='Fruit' datatype='real' name='[fruit]' role='measure' type='quantitative' />
            <column caption='Gluten' datatype='real' name='[gluten]' role='measure' type='quantitative' />
            <column caption='Insulin' datatype='real' name='[insulin]' role='measure' type='quantitative' />
            <column caption='Lead' datatype='real' name='[lead]' role='measure' type='quantitative' />
            <column caption='Meat' datatype='real' name='[meat]' role='measure' type='quantitative' />
            <column caption='Milk' datatype='real' name='[milk]' role='measure' type='quantitative' />
            <column-instance column='[articleTopic]' derivation='None' name='[none:articleTopic:nk]' pivot='key' type='nominal' />
            <column caption='Obesity' datatype='real' name='[obesity]' role='measure' type='quantitative' />
            <column caption='Oils' datatype='real' name='[oils]' role='measure' type='quantitative' />
            <column caption='Pizza' datatype='real' name='[pizza]' role='measure' type='quantitative' />
            <column caption='Recipes' datatype='real' name='[recipes]' role='measure' type='quantitative' />
            <column caption='Restaurants' datatype='real' name='[restaurants]' role='measure' type='quantitative' />
            <column caption='Rice' datatype='real' name='[rice]' role='measure' type='quantitative' />
            <column caption='Salt' datatype='real' name='[salt]' role='measure' type='quantitative' />
            <column caption='Stress' datatype='real' name='[stress]' role='measure' type='quantitative' />
            <column caption='Sugar' datatype='real' name='[sugar]' role='measure' type='quantitative' />
            <column caption='Tea' datatype='real' name='[tea]' role='measure' type='quantitative' />
            <column caption='Water' datatype='real' name='[water]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08rkxn81vkcbm51c075q30yr41nk].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:antibiotics:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:beans:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:cheese:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:chicken:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:children:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:chocolate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:cholesterol:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:coffee:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:cookies:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:dairy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:dates:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:energy:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:environment:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:fat:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:fish:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:fruit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:gluten:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:insulin:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:lead:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:meat:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:milk:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:obesity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:oils:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:pizza:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:recipes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:restaurants:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:rice:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:salt:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:stress:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:sugar:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:tea:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08rkxn81vkcbm51c075q30yr41nk].[attr:water:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08rkxn81vkcbm51c075q30yr41nk].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='border-color' value='#b0b0b0' />
            <format attr='border-width' value='1' />
            <format attr='hnlabel' value='horizontal' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.08rkxn81vkcbm51c075q30yr41nk].[Multiple Values]' value='p0%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.08rkxn81vkcbm51c075q30yr41nk].[:Measure Names]' value='-90' />
            <format attr='text-format' field='[federated.08rkxn81vkcbm51c075q30yr41nk].[Multiple Values]' value='p0%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.08rkxn81vkcbm51c075q30yr41nk].[Multiple Values]' max='0.59999999999999998' palette='blue_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.08rkxn81vkcbm51c075q30yr41nk].[Multiple Values]' value='% of Quote Topic'>
              <formatted-text>
                <run>% of Quote Topic</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08rkxn81vkcbm51c075q30yr41nk].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08rkxn81vkcbm51c075q30yr41nk].[none:articleTopic:nk]</rows>
        <cols>[federated.08rkxn81vkcbm51c075q30yr41nk].[:Measure Names]</cols>
      </table>
    </worksheet>
    <worksheet name='QuoteTypes'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>What kinds of quotes are used in articles of different topics?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='plotNumOfQuotesDF' name='federated.01t4x0m16q73la12mooj805oeaj4' />
          </datasources>
          <datasource-dependencies datasource='federated.01t4x0m16q73la12mooj805oeaj4'>
            <column caption='Article Topic' datatype='string' name='[articleTopic]' role='dimension' type='nominal' />
            <column-instance column='[articleTopic]' derivation='Attribute' name='[attr:articleTopic:nk]' pivot='key' type='nominal' />
            <column caption='Authority' datatype='real' name='[authority]' role='measure' type='quantitative' />
            <column caption='Empirical Observation' datatype='real' name='[empirical observation]' role='measure' type='quantitative' />
            <column-instance column='[articleTopic]' derivation='None' name='[none:articleTopic:nk]' pivot='key' type='nominal' />
            <column caption='Organizations' datatype='real' name='[organizations]' role='measure' type='quantitative' />
            <column caption='Persons' datatype='real' name='[persons]' role='measure' type='quantitative' />
            <column-instance column='[authority]' derivation='Sum' name='[sum:authority:qk]' pivot='key' type='quantitative' />
            <column-instance column='[empirical observation]' derivation='Sum' name='[sum:empirical observation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[organizations]' derivation='Sum' name='[sum:organizations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[persons]' derivation='Sum' name='[sum:persons:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:organizations:qk]' value='p0%' />
            <format attr='text-format' field='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:empirical observation:qk]' value='p0%' />
            <format attr='text-format' field='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:authority:qk]' value='p0%' />
            <format attr='text-format' field='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:persons:qk]' value='p0%' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' x-axis-name='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:authority:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.01t4x0m16q73la12mooj805oeaj4].[attr:articleTopic:nk]' />
            </encodings>
          </pane>
          <pane id='2' x-axis-name='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:empirical observation:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.01t4x0m16q73la12mooj805oeaj4].[none:articleTopic:nk]' />
            </encodings>
          </pane>
          <pane id='3' x-axis-name='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:organizations:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.01t4x0m16q73la12mooj805oeaj4].[none:articleTopic:nk]' />
            </encodings>
          </pane>
          <pane id='4' x-axis-name='[federated.01t4x0m16q73la12mooj805oeaj4].[sum:persons:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.01t4x0m16q73la12mooj805oeaj4].[none:articleTopic:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01t4x0m16q73la12mooj805oeaj4].[none:articleTopic:nk]</rows>
        <cols>([federated.01t4x0m16q73la12mooj805oeaj4].[sum:authority:qk] + ([federated.01t4x0m16q73la12mooj805oeaj4].[sum:empirical observation:qk] + ([federated.01t4x0m16q73la12mooj805oeaj4].[sum:organizations:qk] + [federated.01t4x0m16q73la12mooj805oeaj4].[sum:persons:qk])))</cols>
      </table>
    </worksheet>
    <worksheet name='TopORG'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Most quoted organizations in nutrition news articles</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='plotTopQuoteesDF_o' name='federated.0blxon918wuvlt13amf8d1xt9ka5' />
          </datasources>
          <datasource-dependencies datasource='federated.0blxon918wuvlt13amf8d1xt9ka5'>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[organization]' derivation='None' name='[none:organization:nk]' pivot='key' type='nominal' />
            <column caption='Organization' datatype='string' name='[organization]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ÊAmazon Fresh&quot;' value='Amazon Fresh' />
              </aliases>
            </column>
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='computed' column='[federated.0blxon918wuvlt13amf8d1xt9ka5].[none:organization:nk]' direction='DESC' using='[federated.0blxon918wuvlt13amf8d1xt9ka5].[sum:count:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0blxon918wuvlt13amf8d1xt9ka5].[none:organization:nk]</rows>
        <cols>[federated.0blxon918wuvlt13amf8d1xt9ka5].[sum:count:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='TopPER'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Most quoted people in nutrition news articles</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='plotTopQuoteesDF_p' name='federated.1474e3m0c69jby151lvup13tqyeq' />
          </datasources>
          <datasource-dependencies datasource='federated.1474e3m0c69jby151lvup13tqyeq'>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[quotee]' derivation='None' name='[none:quotee:nk]' pivot='key' type='nominal' />
            <column caption='Quotee' datatype='string' name='[quotee]' role='dimension' type='nominal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1474e3m0c69jby151lvup13tqyeq].[none:quotee:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:quotee:nk]' />
              <groupfilter function='member' level='[none:quotee:nk]' member='&quot;The Prophet&quot;' />
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.1474e3m0c69jby151lvup13tqyeq].[none:quotee:nk]' direction='DESC' using='[federated.1474e3m0c69jby151lvup13tqyeq].[sum:count:qk]' />
          <slices>
            <column>[federated.1474e3m0c69jby151lvup13tqyeq].[none:quotee:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1474e3m0c69jby151lvup13tqyeq].[none:quotee:nk]</rows>
        <cols>[federated.1474e3m0c69jby151lvup13tqyeq].[sum:count:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Full Story' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' param='vert' removable='false' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='4668' id='3' type='title' w='100000' x='0' y='0' />
            <zone h='11307' id='4' paired-zone-id='5' removable='false' type='flipboard-nav' w='100000' x='0' y='4668' />
            <zone h='83610' id='5' paired-zone-id='4' removable='false' type='flipboard' w='100000' x='0' y='15975'>
              <flipboard active-id='5' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='What kinds of quotes are used in articles of different topics?' captured-sheet='QuoteTypes' id='4' />
                  <story-point caption='Topics of Articles vs Topics of Quotes' captured-sheet='HeatMap' id='5' />
                  <story-point caption='Most quoted people in nutrition news articles' captured-sheet='TopPER' id='6' />
                  <story-point caption='Most quoted organizations in nutrition news articles' captured-sheet='TopORG' id='7' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='114'>
    <window class='worksheet' name='QuoteTypes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='HeatMap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08rkxn81vkcbm51c075q30yr41nk].[Multiple Values]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08rkxn81vkcbm51c075q30yr41nk].[:Measure Names]</field>
            <field>[federated.08rkxn81vkcbm51c075q30yr41nk].[Multiple Values]</field>
            <field>[federated.08rkxn81vkcbm51c075q30yr41nk].[none:articleTopic:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='TopPER'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='TopORG'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='Bubbles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0in6t7u08uo9vn15vfcue18vmizb].[none:quoteTopic:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0in6t7u08uo9vn15vfcue18vmizb].[none:articleTopic:nk]</field>
            <field>[federated.0in6t7u08uo9vn15vfcue18vmizb].[none:quote:nk]</field>
            <field>[federated.0in6t7u08uo9vn15vfcue18vmizb].[none:quoteTopic:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Full Story'>
      <viewpoints />
      <active id='5' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bubbles' width='192'>
      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
      LwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Full Story' width='192'>
      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
      n6+Z9HwWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='HeatMap' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='QuoteTypes' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TopORG' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TopPER' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
